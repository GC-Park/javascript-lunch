(()=>{"use strict";var n={319:(n,t,e)=>{e.d(t,{Z:()=>s});var a=e(537),r=e.n(a),i=e(645),o=e.n(i)()(r());o.push([n.id,"/* GNB ********************************************/\n.gnb {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n\n  padding: 0 16px;\n\n  background-color: var(--primary-color);\n}\n\n.gnb__title {\n  color: #fcfcfd;\n  cursor: pointer;\n}\n\n.gnb__button {\n  height: 40px;\n\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 24px;\n  cursor: pointer;\n}\n\n.gnb__button img {\n  display: block;\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n}\n","",{version:3,sources:["webpack://./src/css/gnb.css"],names:[],mappings:"AAAA,mDAAmD;AACnD;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,YAAY;;EAEZ,eAAe;;EAEf,sCAAsC;AACxC;;AAEA;EACE,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,YAAY;;EAEZ,YAAY;EACZ,kBAAkB;EAClB,uBAAuB;;EAEvB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,mBAAmB;AACrB",sourcesContent:["/* GNB ********************************************/\n.gnb {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 64px;\n\n  padding: 0 16px;\n\n  background-color: var(--primary-color);\n}\n\n.gnb__title {\n  color: #fcfcfd;\n  cursor: pointer;\n}\n\n.gnb__button {\n  height: 40px;\n\n  border: none;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 24px;\n  cursor: pointer;\n}\n\n.gnb__button img {\n  display: block;\n  width: 40px;\n  height: 40px;\n  object-fit: contain;\n}\n"],sourceRoot:""}]);const s=o},586:(n,t,e)=>{e.d(t,{Z:()=>s});var a=e(537),r=e.n(a),i=e(645),o=e.n(i)()(r());o.push([n.id,"/* 음식점 탭 창 *****************************************/\n.restaurant-tab {\n  display: flex;\n  margin-top: 20px;\n}\n\n.all-restaurant {\n  width: 50%;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n\n  text-align: center;\n  padding: 9px;\n  margin-left: 16px;\n  cursor: pointer;\n}\n\n.active {\n  color: #ec4a0a;\n  border-bottom: 2px solid #ec4a0a;\n}\n\n.inactive {\n  color: #667085;\n  border-bottom: 2px solid #667085;\n}\n\n.favorite-restaurant {\n  width: 50%;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n\n  text-align: center;\n  padding: 9px;\n  margin-right: 16px;\n  cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/css/inventory.css"],names:[],mappings:"AAAA,oDAAoD;AACpD;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,UAAU;EACV,qBAAqB;EACrB,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,iBAAiB;;EAEjB,kBAAkB;EAClB,YAAY;EACZ,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,gCAAgC;AAClC;;AAEA;EACE,cAAc;EACd,gCAAgC;AAClC;;AAEA;EACE,UAAU;EACV,qBAAqB;EACrB,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,iBAAiB;;EAEjB,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;EAClB,eAAe;AACjB",sourcesContent:["/* 음식점 탭 창 *****************************************/\n.restaurant-tab {\n  display: flex;\n  margin-top: 20px;\n}\n\n.all-restaurant {\n  width: 50%;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n\n  text-align: center;\n  padding: 9px;\n  margin-left: 16px;\n  cursor: pointer;\n}\n\n.active {\n  color: #ec4a0a;\n  border-bottom: 2px solid #ec4a0a;\n}\n\n.inactive {\n  color: #667085;\n  border-bottom: 2px solid #667085;\n}\n\n.favorite-restaurant {\n  width: 50%;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n\n  text-align: center;\n  padding: 9px;\n  margin-right: 16px;\n  cursor: pointer;\n}\n"],sourceRoot:""}]);const s=o},399:(n,t,e)=>{e.d(t,{Z:()=>s});var a=e(537),r=e.n(a),i=e(645),o=e.n(i)()(r());o.push([n.id,"/* 음식점 추가 모달 *****************************************/\n.modal {\n  display: none;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n\n.modal-container {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  max-height: 95%;\n\n  padding: 32px 16px;\n\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n\n  overflow: scroll;\n}\n\n.modal-title {\n  margin-bottom: 36px;\n}\n\n.form-item {\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 36px;\n}\n\n.form-item label {\n  color: var(--grey-400);\n  font-size: 14px;\n}\n\n.form-item--required label::after {\n  padding-left: 4px;\n\n  color: var(--primary-color);\n  content: '*';\n}\n\n.form-item .help-text {\n  color: var(--grey-300);\n}\n\n.form-item #name,\n.form-item #description,\n.form-item #category,\n.form-item #link,\n.form-item #distance {\n  padding: 8px;\n  margin: 6px 0;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  font-size: 16px;\n}\n\n.form-item #description {\n  resize: none;\n}\n\n.form-item #category,\n.form-item #distance {\n  height: 44px;\n\n  color: var(--grey-300);\n}\n\ninput[name='name'],\ninput[name='link'] {\n  height: 44px;\n}\n\n.button-container {\n  display: flex;\n}\n\n.button {\n  width: 100%;\n  height: 44px;\n\n  margin-right: 16px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.button:last-child {\n  margin-right: 0;\n}\n\n.button--secondary {\n  border: 1px solid var(--grey-300);\n  background: transparent;\n\n  color: var(--grey-300);\n}\n\n.button--primary {\n  background: var(--primary-color);\n\n  color: var(--grey-100);\n}\n\n/* 음식점 디테일 모달 *****************************************/\n.modal--detail {\n  display: none;\n}\n\n.modal-picture-favorite {\n  display: flex;\n  justify-content: space-between;\n}\n\n.detail-item {\n  margin-bottom: 16px;\n}\n\n.modal-detail-restaurant__link {\n  text-decoration: underline;\n  color: inherit;\n}\n\n.detail-button-container {\n  margin-top: 30px;\n}\n","",{version:3,sources:["webpack://./src/css/modal.css"],names:[],mappings:"AAAA,sDAAsD;AACtD;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;;EAEP,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,SAAS;EACT,WAAW;EACX,eAAe;;EAEf,kBAAkB;;EAElB,8BAA8B;EAC9B,2BAA2B;;EAE3B,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;;EAEtB,mBAAmB;AACrB;;AAEA;EACE,sBAAsB;EACtB,eAAe;AACjB;;AAEA;EACE,iBAAiB;;EAEjB,2BAA2B;EAC3B,YAAY;AACd;;AAEA;EACE,sBAAsB;AACxB;;AAEA;;;;;EAKE,YAAY;EACZ,aAAa;;EAEb,iCAAiC;EACjC,kBAAkB;;EAElB,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;;EAEE,YAAY;;EAEZ,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;;EAEZ,kBAAkB;;EAElB,YAAY;EACZ,kBAAkB;;EAElB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iCAAiC;EACjC,uBAAuB;;EAEvB,sBAAsB;AACxB;;AAEA;EACE,gCAAgC;;EAEhC,sBAAsB;AACxB;;AAEA,uDAAuD;AACvD;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,0BAA0B;EAC1B,cAAc;AAChB;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:["/* 음식점 추가 모달 *****************************************/\n.modal {\n  display: none;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  background: rgba(0, 0, 0, 0.35);\n}\n\n.modal-container {\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  max-height: 95%;\n\n  padding: 32px 16px;\n\n  border-radius: 8px 8px 0px 0px;\n  background: var(--grey-100);\n\n  overflow: scroll;\n}\n\n.modal-title {\n  margin-bottom: 36px;\n}\n\n.form-item {\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 36px;\n}\n\n.form-item label {\n  color: var(--grey-400);\n  font-size: 14px;\n}\n\n.form-item--required label::after {\n  padding-left: 4px;\n\n  color: var(--primary-color);\n  content: '*';\n}\n\n.form-item .help-text {\n  color: var(--grey-300);\n}\n\n.form-item #name,\n.form-item #description,\n.form-item #category,\n.form-item #link,\n.form-item #distance {\n  padding: 8px;\n  margin: 6px 0;\n\n  border: 1px solid var(--grey-200);\n  border-radius: 8px;\n\n  font-size: 16px;\n}\n\n.form-item #description {\n  resize: none;\n}\n\n.form-item #category,\n.form-item #distance {\n  height: 44px;\n\n  color: var(--grey-300);\n}\n\ninput[name='name'],\ninput[name='link'] {\n  height: 44px;\n}\n\n.button-container {\n  display: flex;\n}\n\n.button {\n  width: 100%;\n  height: 44px;\n\n  margin-right: 16px;\n\n  border: none;\n  border-radius: 8px;\n\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.button:last-child {\n  margin-right: 0;\n}\n\n.button--secondary {\n  border: 1px solid var(--grey-300);\n  background: transparent;\n\n  color: var(--grey-300);\n}\n\n.button--primary {\n  background: var(--primary-color);\n\n  color: var(--grey-100);\n}\n\n/* 음식점 디테일 모달 *****************************************/\n.modal--detail {\n  display: none;\n}\n\n.modal-picture-favorite {\n  display: flex;\n  justify-content: space-between;\n}\n\n.detail-item {\n  margin-bottom: 16px;\n}\n\n.modal-detail-restaurant__link {\n  text-decoration: underline;\n  color: inherit;\n}\n\n.detail-button-container {\n  margin-top: 30px;\n}\n"],sourceRoot:""}]);const s=o},118:(n,t,e)=>{e.d(t,{Z:()=>s});var a=e(537),r=e.n(a),i=e(645),o=e.n(i)()(r());o.push([n.id,"/* 음식점 목록 *****************************************/\n\n/* 카테고리/정렬 필터 */\n.restaurant-filter-container {\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 16px;\n  margin-top: 24px;\n}\n\n.filter-container-close {\n  display: none;\n}\n\n.restaurant-filter-container select {\n  height: 44px;\n  min-width: 125px;\n\n  border: 1px solid #d0d5dd;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 16px;\n}\n\n.restaurant-filter {\n  padding: 8px;\n  cursor: pointer;\n}\n\n/* 음식점 목록 */\n.restaurant-list-container {\n  display: flex;\n  flex-direction: column;\n\n  padding: 0 16px;\n  margin: 16px 0;\n}\n\n.restaurant {\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n\n  padding: 16px 8px;\n\n  border-bottom: 1px solid #e9eaed;\n  cursor: pointer;\n}\n\n.restaurant_info {\n  display: flex;\n}\n\n.restaurant__category {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n  min-width: 64px;\n  min-height: 64px;\n\n  margin-right: 16px;\n\n  border-radius: 50%;\n  background: var(--lighten-color);\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n}\n\n.restaurant__info {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n\n.restaurant__name {\n  margin: 0;\n}\n\n.restaurant__distance {\n  color: var(--primary-color);\n}\n\n.restaurant__description {\n  display: -webkit-box;\n\n  padding-top: 8px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n","",{version:3,sources:["webpack://./src/css/restaurantList.css"],names:[],mappings:"AAAA,mDAAmD;;AAEnD,eAAe;AACf;EACE,aAAa;EACb,8BAA8B;;EAE9B,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,gBAAgB;;EAEhB,yBAAyB;EACzB,kBAAkB;EAClB,uBAAuB;;EAEvB,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,eAAe;AACjB;;AAEA,WAAW;AACX;EACE,aAAa;EACb,sBAAsB;;EAEtB,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,8BAA8B;;EAE9B,iBAAiB;;EAEjB,gCAAgC;EAChC,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,eAAe;EACf,gBAAgB;;EAEhB,kBAAkB;;EAElB,kBAAkB;EAClB,gCAAgC;AAClC;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,2BAA2B;AAC7B;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,oBAAoB;;EAEpB,gBAAgB;;EAEhB,gBAAgB;EAChB,uBAAuB;EACvB,qBAAqB;EACrB,4BAA4B;AAC9B",sourcesContent:["/* 음식점 목록 *****************************************/\n\n/* 카테고리/정렬 필터 */\n.restaurant-filter-container {\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 16px;\n  margin-top: 24px;\n}\n\n.filter-container-close {\n  display: none;\n}\n\n.restaurant-filter-container select {\n  height: 44px;\n  min-width: 125px;\n\n  border: 1px solid #d0d5dd;\n  border-radius: 8px;\n  background: transparent;\n\n  font-size: 16px;\n}\n\n.restaurant-filter {\n  padding: 8px;\n  cursor: pointer;\n}\n\n/* 음식점 목록 */\n.restaurant-list-container {\n  display: flex;\n  flex-direction: column;\n\n  padding: 0 16px;\n  margin: 16px 0;\n}\n\n.restaurant {\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n\n  padding: 16px 8px;\n\n  border-bottom: 1px solid #e9eaed;\n  cursor: pointer;\n}\n\n.restaurant_info {\n  display: flex;\n}\n\n.restaurant__category {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n  min-width: 64px;\n  min-height: 64px;\n\n  margin-right: 16px;\n\n  border-radius: 50%;\n  background: var(--lighten-color);\n}\n\n.category-icon {\n  width: 36px;\n  height: 36px;\n}\n\n.restaurant__info {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n\n.restaurant__name {\n  margin: 0;\n}\n\n.restaurant__distance {\n  color: var(--primary-color);\n}\n\n.restaurant__description {\n  display: -webkit-box;\n\n  padding-top: 8px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n"],sourceRoot:""}]);const s=o},402:(n,t,e)=>{e.d(t,{Z:()=>s});var a=e(537),r=e.n(a),i=e(645),o=e.n(i)()(r());o.push([n.id,"* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nul,\nli {\n  list-style: none;\n}\n\nhtml,\nbody {\n  font-family: sans-serif;\n  font-size: 16px;\n}\n\n/* Colors *****************************************/\n:root {\n  --primary-color: #ec4a0a;\n  --lighten-color: #f6a88a;\n  --grey-100: #ffffff;\n  --grey-200: #d0d5dd;\n  --grey-300: #667085;\n  --grey-400: #344054;\n  --grey-500: #000000;\n}\n\n/* Typography *************************************/\n.text-title {\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 600;\n}\n\n.text-subtitle {\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 600;\n}\n\n.text-body {\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n}\n\n.text-caption {\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n}\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;;EAEE,uBAAuB;EACvB,eAAe;AACjB;;AAEA,mDAAmD;AACnD;EACE,wBAAwB;EACxB,wBAAwB;EACxB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA,mDAAmD;AACnD;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB",sourcesContent:["* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nul,\nli {\n  list-style: none;\n}\n\nhtml,\nbody {\n  font-family: sans-serif;\n  font-size: 16px;\n}\n\n/* Colors *****************************************/\n:root {\n  --primary-color: #ec4a0a;\n  --lighten-color: #f6a88a;\n  --grey-100: #ffffff;\n  --grey-200: #d0d5dd;\n  --grey-300: #667085;\n  --grey-400: #344054;\n  --grey-500: #000000;\n}\n\n/* Typography *************************************/\n.text-title {\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 600;\n}\n\n.text-subtitle {\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 600;\n}\n\n.text-body {\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: 400;\n}\n\n.text-caption {\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 400;\n}\n"],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",a=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),a&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),a&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,a,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(a)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(o[l]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);a&&o[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,a=0;a<t.length;a++)if(t[a].identifier===n){e=a;break}return e}function a(n,a){for(var i={},o=[],s=0;s<n.length;s++){var l=n[s],A=a.base?l[0]+a.base:l[0],c=i[A]||0,d="".concat(A," ").concat(c);i[A]=c+1;var u=e(d),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=r(p,a);a.byIndex=s,t.splice(s,0,{identifier:d,updater:m,references:1})}o.push(d)}return o}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var i=a(n=n||[],r=r||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var s=e(i[o]);t[s].references--}for(var l=a(n,r),A=0;A<i.length;A++){var c=e(i[A]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}i=l}}},569:n=>{var t={};n.exports=function(n,e){var a=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var a="";e.supports&&(a+="@supports (".concat(e.supports,") {")),e.media&&(a+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(a+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),a+=e.css,r&&(a+="}"),e.media&&(a+="}"),e.supports&&(a+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(a,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(a){var r=t[a];if(void 0!==r)return r.exports;var i=t[a]={id:a,exports:{}};return n[a](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var a in t)e.o(t,a)&&!e.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:t[a]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var a=t.getElementsByTagName("script");a.length&&(n=a[a.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0,(()=>{const n=n=>document.querySelector(n),t=n=>document.querySelectorAll(n);var a;class r{constructor(){a.set(this,'\n    <header class="gnb">\n      <h1 class="gnb__title text-title">점심 뭐 먹지</h1>\n      <button type="button" class="gnb__button" aria-label="음식점 추가">\n        <img src="./add-button.png" alt="음식점 추가" />\n      </button>\n    </header>\n    ')}initializeButtonEvents(){n(".gnb__title").addEventListener("click",(()=>window.location.reload())),n(".gnb__button").addEventListener("click",this.openModal)}render(){document.body.insertAdjacentHTML("afterbegin",function(n,t,e,a){if("a"===e&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!a:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?a:"a"===e?a.call(n):a?a.value:t.get(n)}(this,a,"f"))}openModal(){n(".modal").style.display="block"}}a=new WeakMap;var i;class o{constructor(){i.set(this,'\n          <section class="restaurant-list-container">\n            <ul class="restaurant-list">\n            </ul>\n        </section>\n    ')}render(){n("main").insertAdjacentHTML("beforeend",function(n,t,e,a){if("a"===e&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!a:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?a:"a"===e?a.call(n):a?a.value:t.get(n)}(this,i,"f"))}}i=new WeakMap;const s="restaurants",l="foodCategory",A="sort",c="favorite",d="number",u="name",p="distance",m="전체",g="favorite",f="./favorite-icon-filled.png",h="./favorite-icon-lined.png",E=(n,t)=>localStorage.getItem(n)??t;function v(n){return JSON.parse(localStorage.getItem(n))}function b(n){return JSON.stringify(n)}function x(n,t){localStorage.setItem(n,b(t))}var B;class y{constructor(n){B.set(this,'\n    <div class="restaurant-tab">\n        <div class="all-restaurant active">\n            <span>모든 음식점</span>\n        </div>\n        <div class="favorite-restaurant inactive">\n            <span>자주 가는 음식점</span>\n        </div>\n    </div>\n    '),this.restaurantRegistry=n}render(){n("main").insertAdjacentHTML("afterbegin",function(n,t,e,a){if("a"===e&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!a:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?a:"a"===e?a.call(n):a?a.value:t.get(n)}(this,B,"f"))}initializeButtonEvents(){n(".all-restaurant").addEventListener("click",(()=>{y.favoriteTabToAllListTab(),n(".restaurant-list").replaceChildren();const t=v(s);this.restaurantRegistry.attachRestaurantToRegistry(t)})),n(".favorite-restaurant").addEventListener("click",(()=>{y.allListTabToFavoriteTab(),n(".restaurant-list").replaceChildren();const t=v(c);t.forEach((n=>n[g]=f)),this.restaurantRegistry.attachRestaurantToRegistry(t)}))}}B=new WeakMap,y.favoriteTabToAllListTab=function(){n(".all-restaurant").classList.remove("inactive"),n(".all-restaurant").classList.add("active"),n(".favorite-restaurant").classList.remove("active"),n(".favorite-restaurant").classList.add("inactive"),n(".restaurant-filter-container").className="restaurant-filter-container"},y.allListTabToFavoriteTab=function(){n(".favorite-restaurant").classList.remove("inactive"),n(".favorite-restaurant").classList.add("active"),n(".all-restaurant").classList.remove("active"),n(".all-restaurant").classList.add("inactive"),n(".restaurant-filter-container").className="restaurant-filter-container filter-container-close"};var C;class w{constructor(t,e){C.set(this,'\n    <div class="modal modal--open">\n      <div class="modal-backdrop"></div>\n      <div class="modal-container">\n        <h2 class="modal-title text-title">새로운 음식점</h2>\n        <form class="modal-form">\n\n          \x3c!-- 카테고리 --\x3e\n          <div class="form-item form-item--required">\n            <label for="category text-caption">카테고리</label>\n            <select name="category" id="category" required>\n              <option value="">선택해 주세요</option>\n              <option value="한식">한식</option>\n              <option value="중식">중식</option>\n              <option value="일식">일식</option>\n              <option value="양식">양식</option>\n              <option value="아시안">아시안</option>\n              <option value="기타">기타</option>\n            </select>\n          </div>\n\n          \x3c!-- 음식점 이름 --\x3e\n          <div class="form-item form-item--required">\n            <label for="name text-caption">이름</label>\n            <input type="text" name="name" id="name" required>\n          </div>\n\n          \x3c!-- 거리 --\x3e\n          <div class="form-item form-item--required">\n            <label for="distance text-caption">거리(도보 이동 시간) </label>\n            <select name="distance" id="distance" required>\n              <option value="">선택해 주세요</option>\n              <option value="5">5분 내</option>\n              <option value="10">10분 내</option>\n              <option value="15">15분 내</option>\n              <option value="20">20분 내</option>\n              <option value="30">30분 내</option>\n            </select>\n          </div>\n\n          \x3c!-- 설명 --\x3e\n          <div class="form-item">\n            <label for="description text-caption">설명</label>\n            <textarea name="description" id="description" cols="30" rows="5"></textarea>\n            <span class="help-text text-caption">메뉴 등 추가 정보를 입력해 주세요.</span>\n          </div>\n\n          \x3c!-- 링크 --\x3e\n          <div class="form-item">\n            <label for="link text-caption">참고 링크</label>\n            <input type="text" name="link" id="link">\n            <span class="help-text text-caption">매장 정보를 확인할 수 있는 링크를 입력해 주세요.</span>\n          </div>\n\n          \x3c!-- 취소/추가 버튼 --\x3e\n          <div class="button-container">\n            <button type="button" class="button button--secondary text-caption">취소하기</button>\n            <button class="button button--primary text-caption">추가하기</button>\n          </div>\n        </form>\n      </div>\n    </div>\n    '),this.closeModal=()=>{this.resetValue(),n(".modal").style.display="none"},this.restaurantList=t,this.restaurantRegistry=e}render(){document.body.insertAdjacentHTML("beforeend",function(n,t,e,a){if("a"===e&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!a:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?a:"a"===e?a.call(n):a?a.value:t.get(n)}(this,C,"f"))}initializeButtonEvents(){n(".modal-form").addEventListener("submit",(n=>{n.preventDefault(),this.addRestaurant()})),n(".button--secondary").addEventListener("click",this.closeModal)}addRestaurant(){try{(n=>{if((n=>n.length>10)(n))throw new Error("[Error] 이름은 10자 이하만 입력 가능합니다.");if((n=>""===n.trim())(n))throw new Error("[Error] 이름은 공백으로만 이루어질 수 없습니다.");if((n=>{const t=v(s);return 0!==t.length&&t.some((t=>t.name===n))})(n))throw new Error("[Error] 이름은 중복될 수 없습니다.")})(n("#name").value);const t=this.setRestaurantInformation();this.restaurantList.add(t),this.restaurantRegistry.appendRestaurant(this.restaurantList.listRestaurant[this.getRestaurantLength()]),y.favoriteTabToAllListTab(),this.restauranListFilter(),this.closeModal()}catch(n){alert(n.message)}}restauranListFilter(){const n=E(l,m),t=E(A,u);this.restaurantList.filterCategory(n),this.restaurantList.filterBySort(t,n)}setRestaurantInformation(){const n={},e=v(d),a=["category",u,p,"description","link",g];return t(".form-item").forEach(((t,e)=>{n[a[e]]=t.children[1].value})),n.id=e,n[g]=h,localStorage.setItem(d,e+1),n}getRestaurantLength(){return this.restaurantList.listRestaurant.length-1}resetValue(){t(".form-item").forEach(((n,t)=>{n.children[1].value=0!==t&&2!==t?null:""}))}}C=new WeakMap;var k;class _{constructor(n,t){k.set(this,'\n    <main>\n        <section class="restaurant-filter-container">\n            <select name="category" id="category-filter" class="restaurant-filter">\n                <option value="전체">전체</option>\n                <option value="한식">한식</option>\n                <option value="중식">중식</option>\n                <option value="일식">일식</option>\n                <option value="양식">양식</option>\n                <option value="아시안">아시안</option>\n                <option value="기타">기타</option>\n            </select>\n\n            \x3c!-- 정렬 셀렉트 박스 --\x3e\n            <select name="sorting" id="sorting-filter" class="restaurant-filter">\n                <option value="name">이름순</option>\n                <option value="distance">거리순</option>\n            </select>\n        </section>\n    </main>\n '),this.restaurantList=n,this.restaurantRegistry=t}render(){document.body.insertAdjacentHTML("beforeend",function(n,t,e,a){if("a"===e&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!a:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?a:"a"===e?a.call(n):a?a.value:t.get(n)}(this,k,"f"))}initializeButtonEvents(){const t=n("#category-filter");t.addEventListener("change",(()=>{const n=t.options[t.selectedIndex].value;this.restaurantList.filterCategory(n),this.restaurantList.filterBySort(localStorage.getItem(A),n)}));const e=n("#sorting-filter");e.addEventListener("change",(()=>{const n=e.options[e.selectedIndex].value;this.restaurantList.filterBySort(n,localStorage.getItem(l))}))}}k=new WeakMap;var L;class R{constructor(t,e){L.set(this,'\n    <div class="modal--detail">\n      <div class="modal-backdrop"></div>\n      <div class="modal-container">\n        <div class="modal-picture-favorite">\n          \x3c!-- 카테고리 사진 --\x3e\n          <div class="detail-item restaurant__category">\n            <img class="category-icon modal-detail-restaurant__image">\n          </div>\n\n          \x3c!-- 즐겨찾기 --\x3e\n          <div class="modla--restaurant_favorite">\n          </div>\n        </div>\n\n          \x3c!-- 음식점 이름 --\x3e\n          <div class="detail-item">\n            <h3 class="restaurant__name  modal-detail-restaurant__name text-subtitle"></h3>\n          </div>\n\n          \x3c!-- 거리 --\x3e\n          <div class="detail-item">\n            <span class="restaurant__distance modal-detail-restaurant__distance text-body"></span>\n          </div>\n\n          \x3c!-- 설명 --\x3e\n          <div class="detail-item">\n            <p class="modal-detail-restaurant__description text-body"></p>\n          </div>\n\n          \x3c!-- 링크 --\x3e\n          <div class="detail-item">\n            <a class="modal-detail-restaurant__link"></a>\n          </div>\n\n          \x3c!-- 취소/추가 버튼 --\x3e\n          <div class="button-container detail-button-container">\n            <button type="button" class="button button--delete text-caption">삭제하기</button>\n            <button type="button" class="button button--close text-caption">닫기</button>\n          </div>\n      </div>\n    </div>\n    '),this.deleteButtonInDetail=()=>{if(this.restaurantList.deleteRestaurantElement(),n(".favorite-restaurant").classList.contains("active")){const t=v(c)||[];return this.closeModalDetail(),n(".restaurant-list").replaceChildren(),void this.restaurantRegistry.attachRestaurantToRegistry(t)}this.restauranListFilter(),this.closeModalDetail()},this.favoriteEvent=n=>this.clickModalFavorite(n,this.restaurantInfo),this.closeModalDetail=()=>{n(".modal--detail").style.display="none",n(".modal--detail").removeAttribute("id")},this.restaurantList=t,this.restaurantRegistry=e}render(){document.body.insertAdjacentHTML("beforeend",function(n,t,e,a){if("a"===e&&!a)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?n!==t||!a:!t.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?a:"a"===e?a.call(n):a?a.value:t.get(n)}(this,L,"f"))}initializeButtonEvents(){n(".button--close").addEventListener("click",this.closeModalDetail),n(".button--delete").addEventListener("click",this.deleteButtonInDetail)}restauranListFilter(){const n=E(l,m),t=E(A,u);this.restaurantList.filterCategory(n),this.restaurantList.filterBySort(t,n)}changeRestaurantInformation(t){this.restaurantInfo=t,this.setRestaurantInformation(t),n(".modla--restaurant_image").addEventListener("click",this.favoriteEvent)}setRestaurantInformation(n){this.setRestaurantId(n),this.setRestaurantCategory(n),this.setRestaurantName(n),this.setRestaurantDistance(n),this.setRestaurantDescription(n),this.setRestaurantLink(n),this.setRestaurantFavorite(n)}setRestaurantId(t){n(".modal--detail").id=t.id}setRestaurantCategory(t){const e={한식:"./category-korean.png",일식:"./category-japanese.png",양식:"./category-western.png",중식:"./category-chinese.png",아시안:"./category-asian.png",기타:"./category-etc.png"};n(".modal-detail-restaurant__image").setAttribute("src",e[t.category]),n(".modal-detail-restaurant__image").setAttribute("alt",t.category)}setRestaurantName(t){n(".modal-detail-restaurant__name").textContent=t.name}setRestaurantDistance(t){n(".modal-detail-restaurant__distance").textContent=`캠퍼스로부터 ${t.distance}분 내`}setRestaurantDescription(t){n(".modal-detail-restaurant__description").textContent=t.description}setRestaurantLink(t){n(".modal-detail-restaurant__link").setAttribute("href",t.link),n(".modal-detail-restaurant__link").textContent=t.link}setRestaurantFavorite(n){this.changeFavoriteImg(h),this.openModalDetail(),(v(c)??[]).forEach((t=>{t.id===n.id&&this.changeFavoriteImg(f)}))}changeFavoriteImg(t){n(".modla--restaurant_favorite").replaceChildren(),n(".modla--restaurant_favorite").innerHTML+=`<img class="modla--restaurant_image" src="${t}">`}clickModalFavorite(n,t){n.stopPropagation(),this.isFilledOrLined(n,f)?this.ifFavoriteFilled(n,t):this.isFilledOrLined(n,h)&&this.ifFavoriteLined(n,t)}isFilledOrLined(n,t){return n.target.getAttribute("src")===t}getFavoriteList(n,t){return[...v(s)].map((e=>(e.id===t.id&&(e[g]=n),e)))}ifFavoriteFilled(n,t){const e=this.getFavoriteList(h,t);x(s,e);const a=(v(c)??[]).filter((n=>n.id!==t.id));x(c,a),this.changeFavoriteImageAttribut(n,t,h)}ifFavoriteLined(n,t){const e=this.getFavoriteList(f,t);x(s,e);const a=[...v(c)??[]];a.push(t),x(c,a),this.changeFavoriteImageAttribut(n,t,f)}changeFavoriteImageAttribut(t,e,a){n(`.restaurant_favorite${e.id}`).children[0].setAttribute("src",a),t.target.setAttribute("src",a)}openModalDetail(){n(".modal--detail").style.display="block"}}L=new WeakMap;class T{appendRestaurant(t){const e=`\n    <li class="restaurant" id="restaurant${t.id}">\n        <div class="restaurant_info">\n          <div class="restaurant__category">\n            <img src="${{한식:"./category-korean.png",일식:"./category-japanese.png",양식:"./category-western.png",중식:"./category-chinese.png",아시안:"./category-asian.png",기타:"./category-etc.png"}[t.category]}" alt="${t.category}" class="category-icon">\n          </div>\n          <div class="restaurant__info">\n            <h3 class="restaurant__name text-subtitle">${t.name}</h3>\n            <span class="restaurant__distance text-body">캠퍼스로부터 ${t.distance}분 내</span>\n            <p class="restaurant__description text-body">${t.description}</p>\n          </div>\n        </div>  \n          <div class="restaurant_favorite${t.id}">\n            <img src=${t.favorite}>\n          </div>\n    </li>\n    `;n(".restaurant-list").insertAdjacentHTML("beforeend",e),n(`#restaurant${t.id}`).addEventListener("click",(()=>{(new R).changeRestaurantInformation(t)})),n(`.restaurant_favorite${t.id}`).addEventListener("click",(n=>{this.clickModalFavorite(n,t)}))}clickModalFavorite(n,t){n.stopPropagation(),this.isFilledOrLined(n,f)?this.ifFavoriteFilled(n,t):this.isFilledOrLined(n,h)&&this.ifFavoriteLined(n,t)}isFilledOrLined(n,t){return n.target.getAttribute("src")===t}getFavoriteList(n,t){return[...v(s)].map((e=>(e.id===t.id&&(e[g]=n),e)))}ifFavoriteFilled(n,t){const e=this.getFavoriteList(h,t);x(s,e);const a=(v(c)??[]).filter((n=>n.id!==t.id));x(c,a),this.changeFavoriteImageAttribut(n,t,h)}ifFavoriteLined(n,t){const e=this.getFavoriteList(f,t);x(s,e);const a=[...v(c)??[]];a.push(t),x(c,a),this.changeFavoriteImageAttribut(n,t,f)}changeFavoriteImageAttribut(t,e,a){n(`.restaurant_favorite${e.id}`).children[0].setAttribute("src",a),t.target.setAttribute("src",a)}attachRestaurantToRegistry(n){n.forEach((n=>{this.appendRestaurant(n)}))}}class j{constructor(){this.list=[];const n=v(s)??[];0!==n.length&&n.forEach((n=>{this.list.push(n)})),this.restaurantRegistry=new T}add(n){const t=v(s)??[];this.list=[...t,n];const e=b(this.list);localStorage.setItem(s,e)}get listRestaurant(){return this.list}categoryFilter(n){if(n===m){const n=v(s)??[];return this.list=[...n],this.list}return this.foodFilter(n,[])}foodFilter(n,t){const e=v(s)??[];return this.list=[...e],this.list.filter((e=>{e.category===n&&t.push(e)})),t}filterCategory(t){localStorage.setItem(l,t),n(".restaurant-list").replaceChildren();const e=this.categoryFilter(t);this.attachRestaurantToRegistry(e)}filterBySort(t,e){n(".restaurant-list").replaceChildren();const a=this.categoryFilter(e);t===u&&a.sort(((n,t)=>n.name>t.name?1:n.name<t.name?-1:0)),t===p&&a.sort(((n,t)=>n.distance-t.distance)),localStorage.setItem(A,t),this.attachRestaurantToRegistry(a)}attachRestaurantToRegistry(n){n.forEach((n=>{this.restaurantRegistry.appendRestaurant(n)}))}deleteRestaurantElement(){const t=n(".modal--detail").id,e=(v(s)??[]).filter((n=>n.id!==Number(t)));localStorage.setItem(s,b(e)),this.list=v(s)??[];const a=(v(c)??[]).filter((n=>n.id!==Number(t)));localStorage.setItem(c,b(a))}}var F=e(379),I=e.n(F),S=e(795),M=e.n(S),z=e(569),D=e.n(z),Z=e(565),Y=e.n(Z),P=e(216),W=e.n(P),q=e(589),N=e.n(q),$=e(402),O={};O.styleTagTransform=N(),O.setAttributes=Y(),O.insert=D().bind(null,"head"),O.domAPI=M(),O.insertStyleElement=W(),I()($.Z,O),$.Z&&$.Z.locals&&$.Z.locals;var H=e(319),U={};U.styleTagTransform=N(),U.setAttributes=Y(),U.insert=D().bind(null,"head"),U.domAPI=M(),U.insertStyleElement=W(),I()(H.Z,U),H.Z&&H.Z.locals&&H.Z.locals;var X=e(399),V={};V.styleTagTransform=N(),V.setAttributes=Y(),V.insert=D().bind(null,"head"),V.domAPI=M(),V.insertStyleElement=W(),I()(X.Z,V),X.Z&&X.Z.locals&&X.Z.locals;var J=e(118),G={};G.styleTagTransform=N(),G.setAttributes=Y(),G.insert=D().bind(null,"head"),G.domAPI=M(),G.insertStyleElement=W(),I()(J.Z,G),J.Z&&J.Z.locals&&J.Z.locals;var Q=e(586),K={};K.styleTagTransform=N(),K.setAttributes=Y(),K.insert=D().bind(null,"head"),K.domAPI=M(),K.insertStyleElement=W(),I()(Q.Z,K),Q.Z&&Q.Z.locals&&Q.Z.locals,e.p,e.p,e.p,e.p,e.p,e.p,e.p,e.p,e.p,new class{constructor(){this.restaurantList=new j,this.restaurantRegistry=new T,this.header=new r,this.modal=new w(this.restaurantList,this.restaurantRegistry),this.filter=new _(this.restaurantList,this.restaurantRegistry),this.restaurantInventory=new y(this.restaurantRegistry),this.restaurantContainer=new o,this.modalRestaurantDetail=new R(this.restaurantList,this.restaurantRegistry);const n=v(s);if(this.collectedRender(),this.initializeButtonEvents(),null!==n){const t=n.at(-1).id+1;localStorage.setItem(d,t)}else localStorage.setItem(d,0);const t=v(c),e=n||[].map((n=>(this.isThereRestaurantInFavorites(t,n).length&&(n[g]=f),n)));localStorage.setItem(s,b(e)),localStorage.setItem(A,u),localStorage.setItem(l,m),this.restaurantList.filterBySort(u,m)}isThereRestaurantInFavorites(n,t){return n.filter((n=>n.id===t.id)).length}collectedRender(){this.header.render(),this.modal.render(),this.filter.render(),this.restaurantInventory.render(),this.restaurantContainer.render(),this.modalRestaurantDetail.render()}initializeButtonEvents(){this.header.initializeButtonEvents(),this.modal.initializeButtonEvents(),this.filter.initializeButtonEvents(),this.modalRestaurantDetail.initializeButtonEvents(),this.restaurantInventory.initializeButtonEvents()}}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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T0FBT3pILHlCQUNabkksS0FBS2tSLHNCQUFzQi9JLHlCQUMzQm5JLEtBQUtnUixvQkFBb0I3SSx3QkFDN0IsRSIsInNvdXJjZXMiOlsid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Nzcy9nbmIuY3NzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Nzcy9pbnZlbnRvcnkuY3NzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Nzcy9tb2RhbC5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY3NzL3Jlc3RhdXJhbnRMaXN0LmNzcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jc3Mvc3R5bGUuY3NzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvdXRpbHMvRG9tLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL1VJL0hlYWRlci5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9VSS9SZXN0YXVyYW50Q29udGFpbmVyLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3V0aWxzL0NvbnN0YW50LmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3V0aWxzL0xvY2FsU3RvcmFnZS5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9VSS9SZXN0YXVyYW50SW52ZW50b3J5LmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL1VJL01vZGFsLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3V0aWxzL1ZhbGlkYXRpb24uanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvVUkvRmlsdGVyQmFyLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL1VJL01vZGFsUmVzdGF1cmFudERldGFpbC5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9VSS9SZXN0YXVyYW50UmVnaXN0cnkuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvZG9tYWluL1Jlc3RhdXJhbnRMaXN0LnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3V0aWxzL1NvcnQudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY3NzL3N0eWxlLmNzcz85ZmNkIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Nzcy9nbmIuY3NzPzBhMTMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY3NzL21vZGFsLmNzcz9mMzgxIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Nzcy9yZXN0YXVyYW50TGlzdC5jc3M/NzNmYyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jc3MvaW52ZW50b3J5LmNzcz80MGFkIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0cy9hZGQtYnV0dG9uLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldHMvY2F0ZWdvcnktYXNpYW4ucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0cy9jYXRlZ29yeS1rb3JlYW4ucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0cy9jYXRlZ29yeS1jaGluZXNlLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldHMvY2F0ZWdvcnktZXRjLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldHMvY2F0ZWdvcnktamFwYW5lc2UucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0cy9jYXRlZ29yeS13ZXN0ZXJuLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldHMvZmF2b3JpdGUtaWNvbi1maWxsZWQucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0cy9mYXZvcml0ZS1pY29uLWxpbmVkLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9BcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIvKiBHTkIgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLmduYiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGhlaWdodDogNjRweDtcXG5cXG4gIHBhZGRpbmc6IDAgMTZweDtcXG5cXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbn1cXG5cXG4uZ25iX190aXRsZSB7XFxuICBjb2xvcjogI2ZjZmNmZDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmduYl9fYnV0dG9uIHtcXG4gIGhlaWdodDogNDBweDtcXG5cXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcblxcbiAgZm9udC1zaXplOiAyNHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uZ25iX19idXR0b24gaW1nIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgd2lkdGg6IDQwcHg7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBvYmplY3QtZml0OiBjb250YWluO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL2duYi5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsbURBQW1EO0FBQ25EO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIsWUFBWTs7RUFFWixlQUFlOztFQUVmLHNDQUFzQztBQUN4Qzs7QUFFQTtFQUNFLGNBQWM7RUFDZCxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsWUFBWTs7RUFFWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLHVCQUF1Qjs7RUFFdkIsZUFBZTtFQUNmLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsV0FBVztFQUNYLFlBQVk7RUFDWixtQkFBbUI7QUFDckJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLyogR05CICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi5nbmIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBoZWlnaHQ6IDY0cHg7XFxuXFxuICBwYWRkaW5nOiAwIDE2cHg7XFxuXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXG59XFxuXFxuLmduYl9fdGl0bGUge1xcbiAgY29sb3I6ICNmY2ZjZmQ7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5nbmJfX2J1dHRvbiB7XFxuICBoZWlnaHQ6IDQwcHg7XFxuXFxuICBib3JkZXI6IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGZvbnQtc2l6ZTogMjRweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmduYl9fYnV0dG9uIGltZyB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHdpZHRoOiA0MHB4O1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLyog7J2M7Iud7KCQIO2DrSDssL0gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLnJlc3RhdXJhbnQtdGFiIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBtYXJnaW4tdG9wOiAyMHB4O1xcbn1cXG5cXG4uYWxsLXJlc3RhdXJhbnQge1xcbiAgd2lkdGg6IDUwJTtcXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICBmb250LXNpemU6IDE2cHg7XFxuICBsaW5lLWhlaWdodDogMjRweDtcXG5cXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDlweDtcXG4gIG1hcmdpbi1sZWZ0OiAxNnB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uYWN0aXZlIHtcXG4gIGNvbG9yOiAjZWM0YTBhO1xcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNlYzRhMGE7XFxufVxcblxcbi5pbmFjdGl2ZSB7XFxuICBjb2xvcjogIzY2NzA4NTtcXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjNjY3MDg1O1xcbn1cXG5cXG4uZmF2b3JpdGUtcmVzdGF1cmFudCB7XFxuICB3aWR0aDogNTAlO1xcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcblxcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgcGFkZGluZzogOXB4O1xcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL2ludmVudG9yeS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsb0RBQW9EO0FBQ3BEO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFVBQVU7RUFDVixxQkFBcUI7RUFDckIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsaUJBQWlCOztFQUVqQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLGNBQWM7RUFDZCxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxVQUFVO0VBQ1YscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGlCQUFpQjs7RUFFakIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiDsnYzsi53soJAg7YOtIOywvSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4ucmVzdGF1cmFudC10YWIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIG1hcmdpbi10b3A6IDIwcHg7XFxufVxcblxcbi5hbGwtcmVzdGF1cmFudCB7XFxuICB3aWR0aDogNTAlO1xcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcblxcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgcGFkZGluZzogOXB4O1xcbiAgbWFyZ2luLWxlZnQ6IDE2cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5hY3RpdmUge1xcbiAgY29sb3I6ICNlYzRhMGE7XFxuICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2VjNGEwYTtcXG59XFxuXFxuLmluYWN0aXZlIHtcXG4gIGNvbG9yOiAjNjY3MDg1O1xcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICM2NjcwODU7XFxufVxcblxcbi5mYXZvcml0ZS1yZXN0YXVyYW50IHtcXG4gIHdpZHRoOiA1MCU7XFxuICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XFxuXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBwYWRkaW5nOiA5cHg7XFxuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qIOydjOyLneygkCDstpTqsIAg66qo64usICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi5tb2RhbCB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4ubW9kYWwtYmFja2Ryb3Age1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiAwO1xcbiAgcmlnaHQ6IDA7XFxuICBib3R0b206IDA7XFxuICBsZWZ0OiAwO1xcblxcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjM1KTtcXG59XFxuXFxuLm1vZGFsLWNvbnRhaW5lciB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBib3R0b206IDA7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1heC1oZWlnaHQ6IDk1JTtcXG5cXG4gIHBhZGRpbmc6IDMycHggMTZweDtcXG5cXG4gIGJvcmRlci1yYWRpdXM6IDhweCA4cHggMHB4IDBweDtcXG4gIGJhY2tncm91bmQ6IHZhcigtLWdyZXktMTAwKTtcXG5cXG4gIG92ZXJmbG93OiBzY3JvbGw7XFxufVxcblxcbi5tb2RhbC10aXRsZSB7XFxuICBtYXJnaW4tYm90dG9tOiAzNnB4O1xcbn1cXG5cXG4uZm9ybS1pdGVtIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcblxcbiAgbWFyZ2luLWJvdHRvbTogMzZweDtcXG59XFxuXFxuLmZvcm0taXRlbSBsYWJlbCB7XFxuICBjb2xvcjogdmFyKC0tZ3JleS00MDApO1xcbiAgZm9udC1zaXplOiAxNHB4O1xcbn1cXG5cXG4uZm9ybS1pdGVtLS1yZXF1aXJlZCBsYWJlbDo6YWZ0ZXIge1xcbiAgcGFkZGluZy1sZWZ0OiA0cHg7XFxuXFxuICBjb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxuICBjb250ZW50OiAnKic7XFxufVxcblxcbi5mb3JtLWl0ZW0gLmhlbHAtdGV4dCB7XFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcbn1cXG5cXG4uZm9ybS1pdGVtICNuYW1lLFxcbi5mb3JtLWl0ZW0gI2Rlc2NyaXB0aW9uLFxcbi5mb3JtLWl0ZW0gI2NhdGVnb3J5LFxcbi5mb3JtLWl0ZW0gI2xpbmssXFxuLmZvcm0taXRlbSAjZGlzdGFuY2Uge1xcbiAgcGFkZGluZzogOHB4O1xcbiAgbWFyZ2luOiA2cHggMDtcXG5cXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWdyZXktMjAwKTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG5cXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLmZvcm0taXRlbSAjZGVzY3JpcHRpb24ge1xcbiAgcmVzaXplOiBub25lO1xcbn1cXG5cXG4uZm9ybS1pdGVtICNjYXRlZ29yeSxcXG4uZm9ybS1pdGVtICNkaXN0YW5jZSB7XFxuICBoZWlnaHQ6IDQ0cHg7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcbn1cXG5cXG5pbnB1dFtuYW1lPSduYW1lJ10sXFxuaW5wdXRbbmFtZT0nbGluayddIHtcXG4gIGhlaWdodDogNDRweDtcXG59XFxuXFxuLmJ1dHRvbi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLmJ1dHRvbiB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogNDRweDtcXG5cXG4gIG1hcmdpbi1yaWdodDogMTZweDtcXG5cXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG5cXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5idXR0b246bGFzdC1jaGlsZCB7XFxuICBtYXJnaW4tcmlnaHQ6IDA7XFxufVxcblxcbi5idXR0b24tLXNlY29uZGFyeSB7XFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTMwMCk7XFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTMwMCk7XFxufVxcblxcbi5idXR0b24tLXByaW1hcnkge1xcbiAgYmFja2dyb3VuZDogdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0xMDApO1xcbn1cXG5cXG4vKiDsnYzsi53soJAg65SU7YWM7J28IOuqqOuLrCAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4ubW9kYWwtLWRldGFpbCB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4ubW9kYWwtcGljdHVyZS1mYXZvcml0ZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG5cXG4uZGV0YWlsLWl0ZW0ge1xcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcXG59XFxuXFxuLm1vZGFsLWRldGFpbC1yZXN0YXVyYW50X19saW5rIHtcXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xcbiAgY29sb3I6IGluaGVyaXQ7XFxufVxcblxcbi5kZXRhaWwtYnV0dG9uLWNvbnRhaW5lciB7XFxuICBtYXJnaW4tdG9wOiAzMHB4O1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL21vZGFsLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxzREFBc0Q7QUFDdEQ7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsTUFBTTtFQUNOLFFBQVE7RUFDUixTQUFTO0VBQ1QsT0FBTzs7RUFFUCwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsU0FBUztFQUNULFdBQVc7RUFDWCxlQUFlOztFQUVmLGtCQUFrQjs7RUFFbEIsOEJBQThCO0VBQzlCLDJCQUEyQjs7RUFFM0IsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjs7RUFFdEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxpQkFBaUI7O0VBRWpCLDJCQUEyQjtFQUMzQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7Ozs7O0VBS0UsWUFBWTtFQUNaLGFBQWE7O0VBRWIsaUNBQWlDO0VBQ2pDLGtCQUFrQjs7RUFFbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTs7RUFFRSxZQUFZOztFQUVaLHNCQUFzQjtBQUN4Qjs7QUFFQTs7RUFFRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTs7RUFFWixrQkFBa0I7O0VBRWxCLFlBQVk7RUFDWixrQkFBa0I7O0VBRWxCLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGlDQUFpQztFQUNqQyx1QkFBdUI7O0VBRXZCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGdDQUFnQzs7RUFFaEMsc0JBQXNCO0FBQ3hCOztBQUVBLHVEQUF1RDtBQUN2RDtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7QUFDaEM7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiDsnYzsi53soJAg7LaU6rCAIOuqqOuLrCAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4ubW9kYWwge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLm1vZGFsLWJhY2tkcm9wIHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG5cXG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4zNSk7XFxufVxcblxcbi5tb2RhbC1jb250YWluZXIge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgYm90dG9tOiAwO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXgtaGVpZ2h0OiA5NSU7XFxuXFxuICBwYWRkaW5nOiAzMnB4IDE2cHg7XFxuXFxuICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDBweCAwcHg7XFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1ncmV5LTEwMCk7XFxuXFxuICBvdmVyZmxvdzogc2Nyb2xsO1xcbn1cXG5cXG4ubW9kYWwtdGl0bGUge1xcbiAgbWFyZ2luLWJvdHRvbTogMzZweDtcXG59XFxuXFxuLmZvcm0taXRlbSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5cXG4gIG1hcmdpbi1ib3R0b206IDM2cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0gbGFiZWwge1xcbiAgY29sb3I6IHZhcigtLWdyZXktNDAwKTtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG59XFxuXFxuLmZvcm0taXRlbS0tcmVxdWlyZWQgbGFiZWw6OmFmdGVyIHtcXG4gIHBhZGRpbmctbGVmdDogNHB4O1xcblxcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbiAgY29udGVudDogJyonO1xcbn1cXG5cXG4uZm9ybS1pdGVtIC5oZWxwLXRleHQge1xcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXG59XFxuXFxuLmZvcm0taXRlbSAjbmFtZSxcXG4uZm9ybS1pdGVtICNkZXNjcmlwdGlvbixcXG4uZm9ybS1pdGVtICNjYXRlZ29yeSxcXG4uZm9ybS1pdGVtICNsaW5rLFxcbi5mb3JtLWl0ZW0gI2Rpc3RhbmNlIHtcXG4gIHBhZGRpbmc6IDhweDtcXG4gIG1hcmdpbjogNnB4IDA7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuXFxuICBmb250LXNpemU6IDE2cHg7XFxufVxcblxcbi5mb3JtLWl0ZW0gI2Rlc2NyaXB0aW9uIHtcXG4gIHJlc2l6ZTogbm9uZTtcXG59XFxuXFxuLmZvcm0taXRlbSAjY2F0ZWdvcnksXFxuLmZvcm0taXRlbSAjZGlzdGFuY2Uge1xcbiAgaGVpZ2h0OiA0NHB4O1xcblxcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXG59XFxuXFxuaW5wdXRbbmFtZT0nbmFtZSddLFxcbmlucHV0W25hbWU9J2xpbmsnXSB7XFxuICBoZWlnaHQ6IDQ0cHg7XFxufVxcblxcbi5idXR0b24tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5idXR0b24ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDQ0cHg7XFxuXFxuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XFxuXFxuICBib3JkZXI6IG5vbmU7XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuXFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uYnV0dG9uOmxhc3QtY2hpbGQge1xcbiAgbWFyZ2luLXJpZ2h0OiAwO1xcbn1cXG5cXG4uYnV0dG9uLS1zZWNvbmRhcnkge1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZ3JleS0zMDApO1xcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuXFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcbn1cXG5cXG4uYnV0dG9uLS1wcmltYXJ5IHtcXG4gIGJhY2tncm91bmQ6IHZhcigtLXByaW1hcnktY29sb3IpO1xcblxcbiAgY29sb3I6IHZhcigtLWdyZXktMTAwKTtcXG59XFxuXFxuLyog7J2M7Iud7KCQIOuUlO2FjOydvCDrqqjri6wgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLm1vZGFsLS1kZXRhaWwge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLm1vZGFsLXBpY3R1cmUtZmF2b3JpdGUge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuXFxuLmRldGFpbC1pdGVtIHtcXG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XFxufVxcblxcbi5tb2RhbC1kZXRhaWwtcmVzdGF1cmFudF9fbGluayB7XFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbn1cXG5cXG4uZGV0YWlsLWJ1dHRvbi1jb250YWluZXIge1xcbiAgbWFyZ2luLXRvcDogMzBweDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLyog7J2M7Iud7KCQIOuqqeuhnSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG5cXG4vKiDsubTthYzqs6Drpqwv7KCV66CsIO2VhO2EsCAqL1xcbi5yZXN0YXVyYW50LWZpbHRlci1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG5cXG4gIHBhZGRpbmc6IDAgMTZweDtcXG4gIG1hcmdpbi10b3A6IDI0cHg7XFxufVxcblxcbi5maWx0ZXItY29udGFpbmVyLWNsb3NlIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5yZXN0YXVyYW50LWZpbHRlci1jb250YWluZXIgc2VsZWN0IHtcXG4gIGhlaWdodDogNDRweDtcXG4gIG1pbi13aWR0aDogMTI1cHg7XFxuXFxuICBib3JkZXI6IDFweCBzb2xpZCAjZDBkNWRkO1xcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxuXFxuICBmb250LXNpemU6IDE2cHg7XFxufVxcblxcbi5yZXN0YXVyYW50LWZpbHRlciB7XFxuICBwYWRkaW5nOiA4cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi8qIOydjOyLneygkCDrqqnroZ0gKi9cXG4ucmVzdGF1cmFudC1saXN0LWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG5cXG4gIHBhZGRpbmc6IDAgMTZweDtcXG4gIG1hcmdpbjogMTZweCAwO1xcbn1cXG5cXG4ucmVzdGF1cmFudCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuXFxuICBwYWRkaW5nOiAxNnB4IDhweDtcXG5cXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTllYWVkO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9pbmZvIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5yZXN0YXVyYW50X19jYXRlZ29yeSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDY0cHg7XFxuICBoZWlnaHQ6IDY0cHg7XFxuICBtaW4td2lkdGg6IDY0cHg7XFxuICBtaW4taGVpZ2h0OiA2NHB4O1xcblxcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xcblxcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZDogdmFyKC0tbGlnaHRlbi1jb2xvcik7XFxufVxcblxcbi5jYXRlZ29yeS1pY29uIHtcXG4gIHdpZHRoOiAzNnB4O1xcbiAgaGVpZ2h0OiAzNnB4O1xcbn1cXG5cXG4ucmVzdGF1cmFudF9faW5mbyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX25hbWUge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fZGlzdGFuY2Uge1xcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fZGVzY3JpcHRpb24ge1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuXFxuICBwYWRkaW5nLXRvcDogOHB4O1xcblxcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy9yZXN0YXVyYW50TGlzdC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsbURBQW1EOztBQUVuRCxlQUFlO0FBQ2Y7RUFDRSxhQUFhO0VBQ2IsOEJBQThCOztFQUU5QixlQUFlO0VBQ2YsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGdCQUFnQjs7RUFFaEIseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQix1QkFBdUI7O0VBRXZCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osZUFBZTtBQUNqQjs7QUFFQSxXQUFXO0FBQ1g7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCOztFQUV0QixlQUFlO0VBQ2YsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsOEJBQThCOztFQUU5QixpQkFBaUI7O0VBRWpCLGdDQUFnQztFQUNoQyxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlO0VBQ2YsZ0JBQWdCOztFQUVoQixrQkFBa0I7O0VBRWxCLGtCQUFrQjtFQUNsQixnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QiwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxTQUFTO0FBQ1g7O0FBRUE7RUFDRSwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxvQkFBb0I7O0VBRXBCLGdCQUFnQjs7RUFFaEIsZ0JBQWdCO0VBQ2hCLHVCQUF1QjtFQUN2QixxQkFBcUI7RUFDckIsNEJBQTRCO0FBQzlCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qIOydjOyLneygkCDrqqnroZ0gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuXFxuLyog7Lm07YWM6rOg66asL+ygleugrCDtlYTthLAgKi9cXG4ucmVzdGF1cmFudC1maWx0ZXItY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuXFxuICBwYWRkaW5nOiAwIDE2cHg7XFxuICBtYXJnaW4tdG9wOiAyNHB4O1xcbn1cXG5cXG4uZmlsdGVyLWNvbnRhaW5lci1jbG9zZSB7XFxuICBkaXNwbGF5OiBub25lO1xcbn1cXG5cXG4ucmVzdGF1cmFudC1maWx0ZXItY29udGFpbmVyIHNlbGVjdCB7XFxuICBoZWlnaHQ6IDQ0cHg7XFxuICBtaW4td2lkdGg6IDEyNXB4O1xcblxcbiAgYm9yZGVyOiAxcHggc29saWQgI2QwZDVkZDtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcblxcbiAgZm9udC1zaXplOiAxNnB4O1xcbn1cXG5cXG4ucmVzdGF1cmFudC1maWx0ZXIge1xcbiAgcGFkZGluZzogOHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4vKiDsnYzsi53soJAg66qp66GdICovXFxuLnJlc3RhdXJhbnQtbGlzdC1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuXFxuICBwYWRkaW5nOiAwIDE2cHg7XFxuICBtYXJnaW46IDE2cHggMDtcXG59XFxuXFxuLnJlc3RhdXJhbnQge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcblxcbiAgcGFkZGluZzogMTZweCA4cHg7XFxuXFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U5ZWFlZDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLnJlc3RhdXJhbnRfaW5mbyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4ucmVzdGF1cmFudF9fY2F0ZWdvcnkge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiA2NHB4O1xcbiAgaGVpZ2h0OiA2NHB4O1xcbiAgbWluLXdpZHRoOiA2NHB4O1xcbiAgbWluLWhlaWdodDogNjRweDtcXG5cXG4gIG1hcmdpbi1yaWdodDogMTZweDtcXG5cXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGJhY2tncm91bmQ6IHZhcigtLWxpZ2h0ZW4tY29sb3IpO1xcbn1cXG5cXG4uY2F0ZWdvcnktaWNvbiB7XFxuICB3aWR0aDogMzZweDtcXG4gIGhlaWdodDogMzZweDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX2luZm8ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxufVxcblxcbi5yZXN0YXVyYW50X19uYW1lIHtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX2Rpc3RhbmNlIHtcXG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXG59XFxuXFxuLnJlc3RhdXJhbnRfX2Rlc2NyaXB0aW9uIHtcXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xcblxcbiAgcGFkZGluZy10b3A6IDhweDtcXG5cXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXG4gIC13ZWJraXQtbGluZS1jbGFtcDogMjtcXG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIioge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbnVsLFxcbmxpIHtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcblxcbmh0bWwsXFxuYm9keSB7XFxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLyogQ29sb3JzICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbjpyb290IHtcXG4gIC0tcHJpbWFyeS1jb2xvcjogI2VjNGEwYTtcXG4gIC0tbGlnaHRlbi1jb2xvcjogI2Y2YTg4YTtcXG4gIC0tZ3JleS0xMDA6ICNmZmZmZmY7XFxuICAtLWdyZXktMjAwOiAjZDBkNWRkO1xcbiAgLS1ncmV5LTMwMDogIzY2NzA4NTtcXG4gIC0tZ3JleS00MDA6ICMzNDQwNTQ7XFxuICAtLWdyZXktNTAwOiAjMDAwMDAwO1xcbn1cXG5cXG4vKiBUeXBvZ3JhcGh5ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLnRleHQtdGl0bGUge1xcbiAgZm9udC1zaXplOiAyMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XFxuICBmb250LXdlaWdodDogNjAwO1xcbn1cXG5cXG4udGV4dC1zdWJ0aXRsZSB7XFxuICBmb250LXNpemU6IDE4cHg7XFxuICBsaW5lLWhlaWdodDogMjhweDtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxufVxcblxcbi50ZXh0LWJvZHkge1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XFxuICBmb250LXdlaWdodDogNDAwO1xcbn1cXG5cXG4udGV4dC1jYXB0aW9uIHtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Nzcy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxVQUFVO0VBQ1YsU0FBUztFQUNULHNCQUFzQjtBQUN4Qjs7QUFFQTs7RUFFRSxnQkFBZ0I7QUFDbEI7O0FBRUE7O0VBRUUsdUJBQXVCO0VBQ3ZCLGVBQWU7QUFDakI7O0FBRUEsbURBQW1EO0FBQ25EO0VBQ0Usd0JBQXdCO0VBQ3hCLHdCQUF3QjtFQUN4QixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCOztBQUVBLG1EQUFtRDtBQUNuRDtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIioge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbnVsLFxcbmxpIHtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcblxcbmh0bWwsXFxuYm9keSB7XFxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLyogQ29sb3JzICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbjpyb290IHtcXG4gIC0tcHJpbWFyeS1jb2xvcjogI2VjNGEwYTtcXG4gIC0tbGlnaHRlbi1jb2xvcjogI2Y2YTg4YTtcXG4gIC0tZ3JleS0xMDA6ICNmZmZmZmY7XFxuICAtLWdyZXktMjAwOiAjZDBkNWRkO1xcbiAgLS1ncmV5LTMwMDogIzY2NzA4NTtcXG4gIC0tZ3JleS00MDA6ICMzNDQwNTQ7XFxuICAtLWdyZXktNTAwOiAjMDAwMDAwO1xcbn1cXG5cXG4vKiBUeXBvZ3JhcGh5ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLnRleHQtdGl0bGUge1xcbiAgZm9udC1zaXplOiAyMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XFxuICBmb250LXdlaWdodDogNjAwO1xcbn1cXG5cXG4udGV4dC1zdWJ0aXRsZSB7XFxuICBmb250LXNpemU6IDE4cHg7XFxuICBsaW5lLWhlaWdodDogMjhweDtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxufVxcblxcbi50ZXh0LWJvZHkge1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XFxuICBmb250LXdlaWdodDogNDAwO1xcbn1cXG5cXG4udGV4dC1jYXB0aW9uIHtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsImV4cG9ydCBjb25zdCAkID0gc2VsZWN0b3IgPT4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG5leHBvcnQgY29uc3QgJCQgPSBzZWxlY3RvciA9PiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbiIsInZhciBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0ID0gKHRoaXMgJiYgdGhpcy5fX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KSB8fCBmdW5jdGlvbiAocmVjZWl2ZXIsIHN0YXRlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHJlYWQgcHJpdmF0ZSBtZW1iZXIgZnJvbSBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiBraW5kID09PSBcIm1cIiA/IGYgOiBraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlcikgOiBmID8gZi52YWx1ZSA6IHN0YXRlLmdldChyZWNlaXZlcik7XG59O1xudmFyIF9IZWFkZXJfdGVtcGxhdGU7XG5pbXBvcnQgeyAkIH0gZnJvbSAnLi4vdXRpbHMvRG9tJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhlYWRlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIF9IZWFkZXJfdGVtcGxhdGUuc2V0KHRoaXMsIGBcbiAgICA8aGVhZGVyIGNsYXNzPVwiZ25iXCI+XG4gICAgICA8aDEgY2xhc3M9XCJnbmJfX3RpdGxlIHRleHQtdGl0bGVcIj7soJDsi6wg662QIOuoueyngDwvaDE+XG4gICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImduYl9fYnV0dG9uXCIgYXJpYS1sYWJlbD1cIuydjOyLneygkCDstpTqsIBcIj5cbiAgICAgICAgPGltZyBzcmM9XCIuL2FkZC1idXR0b24ucG5nXCIgYWx0PVwi7J2M7Iud7KCQIOy2lOqwgFwiIC8+XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2hlYWRlcj5cbiAgICBgKTtcbiAgICB9XG4gICAgaW5pdGlhbGl6ZUJ1dHRvbkV2ZW50cygpIHtcbiAgICAgICAgJCgnLmduYl9fdGl0bGUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKSk7XG4gICAgICAgICQoJy5nbmJfX2J1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vcGVuTW9kYWwpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfSGVhZGVyX3RlbXBsYXRlLCBcImZcIikpO1xuICAgIH1cbiAgICBvcGVuTW9kYWwoKSB7XG4gICAgICAgICQoJy5tb2RhbCcpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIH1cbn1cbl9IZWFkZXJfdGVtcGxhdGUgPSBuZXcgV2Vha01hcCgpO1xuIiwidmFyIF9fY2xhc3NQcml2YXRlRmllbGRHZXQgPSAodGhpcyAmJiB0aGlzLl9fY2xhc3NQcml2YXRlRmllbGRHZXQpIHx8IGZ1bmN0aW9uIChyZWNlaXZlciwgc3RhdGUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIGtpbmQgPT09IFwibVwiID8gZiA6IGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyKSA6IGYgPyBmLnZhbHVlIDogc3RhdGUuZ2V0KHJlY2VpdmVyKTtcbn07XG52YXIgX1Jlc3RhdXJhbnRDb250YWluZXJfdGVtcGxhdGU7XG5pbXBvcnQgeyAkIH0gZnJvbSAnLi4vdXRpbHMvRG9tJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlc3RhdXJhbnRDb250YWluZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBfUmVzdGF1cmFudENvbnRhaW5lcl90ZW1wbGF0ZS5zZXQodGhpcywgYFxuICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPVwicmVzdGF1cmFudC1saXN0LWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPHVsIGNsYXNzPVwicmVzdGF1cmFudC1saXN0XCI+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgYCk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgJCgnbWFpbicpLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfUmVzdGF1cmFudENvbnRhaW5lcl90ZW1wbGF0ZSwgXCJmXCIpKTtcbiAgICB9XG59XG5fUmVzdGF1cmFudENvbnRhaW5lcl90ZW1wbGF0ZSA9IG5ldyBXZWFrTWFwKCk7XG4iLCIvLyBTdHJpbmdcbmV4cG9ydCBjb25zdCBMT0NBTFNUT1JBR0VfS0VZID0ge1xuICAgIFJFU1RBVVJBTlQ6ICdyZXN0YXVyYW50cycsXG4gICAgRk9PRENBVEVHT1JZOiAnZm9vZENhdGVnb3J5JyxcbiAgICBTT1JUQlk6ICdzb3J0JyxcbiAgICBGQVZPUklURTogJ2Zhdm9yaXRlJyxcbiAgICBOVU1CRVI6ICdudW1iZXInLFxufTtcbmV4cG9ydCBjb25zdCBGT1JNX1ZBTFVFID0ge1xuICAgIENBVEVHT1JZOiAnY2F0ZWdvcnknLFxuICAgIE5BTUU6ICduYW1lJyxcbiAgICBESVNUQU5DRTogJ2Rpc3RhbmNlJyxcbiAgICBERVNDUklQVElPTjogJ2Rlc2NyaXB0aW9uJyxcbiAgICBMSU5LOiAnbGluaycsXG59O1xuZXhwb3J0IGNvbnN0IExPQ0FMX0lOUFVUID0ge1xuICAgIEFMTF9DQVRFR09SWTogJ+yghOyytCcsXG4gICAgSUQ6ICdpZCcsXG4gICAgRkFWT1JJVEU6ICdmYXZvcml0ZScsXG59O1xuZXhwb3J0IGNvbnN0IEZBVk9SSVRFX0lDT04gPSB7XG4gICAgRU5ST0xMOiAnLi9mYXZvcml0ZS1pY29uLWZpbGxlZC5wbmcnLFxuICAgIFVORU5ST0xMOiAnLi9mYXZvcml0ZS1pY29uLWxpbmVkLnBuZycsXG59O1xuLy8gTnVtYmVyXG5leHBvcnQgY29uc3QgTlVNQkVSX0ZPUk0gPSB7XG4gICAgQ0FURUdPUlk6IDAsXG4gICAgRElTVEFOQ0U6IDIsXG4gICAgSU5GT1JNQVRJT05fUkVTVEFVUkFOVDogMSxcbn07XG4vLyBwaWN0dXJlXG5leHBvcnQgY29uc3QgUElDVFVSRV9QQVRIID0ge1xuICAgIEtPUkVBTjogJy4vY2F0ZWdvcnkta29yZWFuLnBuZycsXG4gICAgSkFQQU5FU0U6ICcuL2NhdGVnb3J5LWphcGFuZXNlLnBuZycsXG4gICAgQU1FUklDQU46ICcuL2NhdGVnb3J5LXdlc3Rlcm4ucG5nJyxcbiAgICBDSElORVNFOiAnLi9jYXRlZ29yeS1jaGluZXNlLnBuZycsXG4gICAgQVNJQU46ICcuL2NhdGVnb3J5LWFzaWFuLnBuZycsXG4gICAgRVRDOiAnLi9jYXRlZ29yeS1ldGMucG5nJyxcbn07XG4iLCJleHBvcnQgY29uc3QgZ2V0VmFsdWVGcm9tTG9jYWxTdG9yYWdlID0gKHZhbHVlLCBkZWZhdWx0VmFsdWUpID0+IHtcbiAgICByZXR1cm4gbG9jYWxTdG9yYWdlLmdldEl0ZW0odmFsdWUpID8/IGRlZmF1bHRWYWx1ZTtcbn07XG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVzdGF1cmFudExpc3RGcm9tTG9jYWxzdG9yYWdlKHZhbHVlKSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0odmFsdWUpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdpZnlKc29uKHZhbHVlKSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXRUb0xvY2FsU3RvcmFnZShrZXksIHJlc3RhdXJhbnRzKSB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBzdHJpbmdpZnlKc29uKHJlc3RhdXJhbnRzKSk7XG59XG4iLCJ2YXIgX19jbGFzc1ByaXZhdGVGaWVsZEdldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZEdldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIGdldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4ga2luZCA9PT0gXCJtXCIgPyBmIDoga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIpIDogZiA/IGYudmFsdWUgOiBzdGF0ZS5nZXQocmVjZWl2ZXIpO1xufTtcbnZhciBfUmVzdGF1cmFudEludmVudG9yeV90ZW1wbGF0ZTtcbmltcG9ydCB7ICQgfSBmcm9tICcuLi91dGlscy9Eb20nO1xuaW1wb3J0IHsgZ2V0UmVzdGF1cmFudExpc3RGcm9tTG9jYWxzdG9yYWdlIH0gZnJvbSAnLi4vdXRpbHMvTG9jYWxTdG9yYWdlJztcbmltcG9ydCB7IExPQ0FMU1RPUkFHRV9LRVksIExPQ0FMX0lOUFVULCBGQVZPUklURV9JQ09OIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnQnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVzdGF1cmFudEludmVudG9yeSB7XG4gICAgY29uc3RydWN0b3IocmVzdGF1cmFudFJlZ2lzdHJ5KSB7XG4gICAgICAgIF9SZXN0YXVyYW50SW52ZW50b3J5X3RlbXBsYXRlLnNldCh0aGlzLCBgXG4gICAgPGRpdiBjbGFzcz1cInJlc3RhdXJhbnQtdGFiXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJhbGwtcmVzdGF1cmFudCBhY3RpdmVcIj5cbiAgICAgICAgICAgIDxzcGFuPuuqqOuToCDsnYzsi53soJA8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmF2b3JpdGUtcmVzdGF1cmFudCBpbmFjdGl2ZVwiPlxuICAgICAgICAgICAgPHNwYW4+7J6Q7KO8IOqwgOuKlCDsnYzsi53soJA8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIGApO1xuICAgICAgICB0aGlzLnJlc3RhdXJhbnRSZWdpc3RyeSA9IHJlc3RhdXJhbnRSZWdpc3RyeTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICAkKCdtYWluJykuaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfUmVzdGF1cmFudEludmVudG9yeV90ZW1wbGF0ZSwgXCJmXCIpKTtcbiAgICB9XG4gICAgaW5pdGlhbGl6ZUJ1dHRvbkV2ZW50cygpIHtcbiAgICAgICAgJCgnLmFsbC1yZXN0YXVyYW50JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICBSZXN0YXVyYW50SW52ZW50b3J5LmZhdm9yaXRlVGFiVG9BbGxMaXN0VGFiKCk7XG4gICAgICAgICAgICAkKCcucmVzdGF1cmFudC1saXN0JykucmVwbGFjZUNoaWxkcmVuKCk7XG4gICAgICAgICAgICBjb25zdCByZXN0YXVyYW50QWxsID0gZ2V0UmVzdGF1cmFudExpc3RGcm9tTG9jYWxzdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuUkVTVEFVUkFOVCk7XG4gICAgICAgICAgICB0aGlzLnJlc3RhdXJhbnRSZWdpc3RyeS5hdHRhY2hSZXN0YXVyYW50VG9SZWdpc3RyeShyZXN0YXVyYW50QWxsKTtcbiAgICAgICAgfSk7XG4gICAgICAgICQoJy5mYXZvcml0ZS1yZXN0YXVyYW50JykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICBSZXN0YXVyYW50SW52ZW50b3J5LmFsbExpc3RUYWJUb0Zhdm9yaXRlVGFiKCk7XG4gICAgICAgICAgICAkKCcucmVzdGF1cmFudC1saXN0JykucmVwbGFjZUNoaWxkcmVuKCk7XG4gICAgICAgICAgICBjb25zdCByZXN0YXVyYW50RmF2b3JpdGUgPSBnZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UoTE9DQUxTVE9SQUdFX0tFWS5GQVZPUklURSk7XG4gICAgICAgICAgICByZXN0YXVyYW50RmF2b3JpdGUuZm9yRWFjaChyZXN0YXVyYW50ID0+IChyZXN0YXVyYW50W0xPQ0FMX0lOUFVULkZBVk9SSVRFXSA9IEZBVk9SSVRFX0lDT04uRU5ST0xMKSk7XG4gICAgICAgICAgICB0aGlzLnJlc3RhdXJhbnRSZWdpc3RyeS5hdHRhY2hSZXN0YXVyYW50VG9SZWdpc3RyeShyZXN0YXVyYW50RmF2b3JpdGUpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5fUmVzdGF1cmFudEludmVudG9yeV90ZW1wbGF0ZSA9IG5ldyBXZWFrTWFwKCk7XG5SZXN0YXVyYW50SW52ZW50b3J5LmZhdm9yaXRlVGFiVG9BbGxMaXN0VGFiID0gZnVuY3Rpb24gKCkge1xuICAgICQoJy5hbGwtcmVzdGF1cmFudCcpLmNsYXNzTGlzdC5yZW1vdmUoJ2luYWN0aXZlJyk7XG4gICAgJCgnLmFsbC1yZXN0YXVyYW50JykuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgJCgnLmZhdm9yaXRlLXJlc3RhdXJhbnQnKS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbiAgICAkKCcuZmF2b3JpdGUtcmVzdGF1cmFudCcpLmNsYXNzTGlzdC5hZGQoJ2luYWN0aXZlJyk7XG4gICAgJCgnLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lcicpLmNsYXNzTmFtZSA9ICdyZXN0YXVyYW50LWZpbHRlci1jb250YWluZXInO1xufTtcblJlc3RhdXJhbnRJbnZlbnRvcnkuYWxsTGlzdFRhYlRvRmF2b3JpdGVUYWIgPSBmdW5jdGlvbiAoKSB7XG4gICAgJCgnLmZhdm9yaXRlLXJlc3RhdXJhbnQnKS5jbGFzc0xpc3QucmVtb3ZlKCdpbmFjdGl2ZScpO1xuICAgICQoJy5mYXZvcml0ZS1yZXN0YXVyYW50JykuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgJCgnLmFsbC1yZXN0YXVyYW50JykuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgJCgnLmFsbC1yZXN0YXVyYW50JykuY2xhc3NMaXN0LmFkZCgnaW5hY3RpdmUnKTtcbiAgICAkKCcucmVzdGF1cmFudC1maWx0ZXItY29udGFpbmVyJykuY2xhc3NOYW1lID0gJ3Jlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lciBmaWx0ZXItY29udGFpbmVyLWNsb3NlJztcbn07XG4iLCJ2YXIgX19jbGFzc1ByaXZhdGVGaWVsZEdldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZEdldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIGdldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4ga2luZCA9PT0gXCJtXCIgPyBmIDoga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIpIDogZiA/IGYudmFsdWUgOiBzdGF0ZS5nZXQocmVjZWl2ZXIpO1xufTtcbnZhciBfTW9kYWxfdGVtcGxhdGU7XG5pbXBvcnQgeyAkLCAkJCB9IGZyb20gJy4uL3V0aWxzL0RvbSc7XG5pbXBvcnQgeyBOVU1CRVJfRk9STSwgTE9DQUxTVE9SQUdFX0tFWSwgRk9STV9WQUxVRSwgTE9DQUxfSU5QVVQsIEZBVk9SSVRFX0lDT04gfSBmcm9tICcuLi91dGlscy9Db25zdGFudCc7XG5pbXBvcnQgeyBnZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UsIGdldFZhbHVlRnJvbUxvY2FsU3RvcmFnZSB9IGZyb20gJy4uL3V0aWxzL0xvY2FsU3RvcmFnZSc7XG5pbXBvcnQgUmVzdGF1cmFudEludmVudG9yeSBmcm9tICcuL1Jlc3RhdXJhbnRJbnZlbnRvcnknO1xuaW1wb3J0IHsgbmFtZVZhbGlkYXRpb24gfSBmcm9tICcuLi91dGlscy9WYWxpZGF0aW9uJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vZGFsIHtcbiAgICBjb25zdHJ1Y3RvcihyZXN0YXVyYW50TGlzdCwgcmVzdGF1cmFudFJlZ2lzdHJ5KSB7XG4gICAgICAgIF9Nb2RhbF90ZW1wbGF0ZS5zZXQodGhpcywgYFxuICAgIDxkaXYgY2xhc3M9XCJtb2RhbCBtb2RhbC0tb3BlblwiPlxuICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWJhY2tkcm9wXCI+PC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtY29udGFpbmVyXCI+XG4gICAgICAgIDxoMiBjbGFzcz1cIm1vZGFsLXRpdGxlIHRleHQtdGl0bGVcIj7sg4jroZzsmrQg7J2M7Iud7KCQPC9oMj5cbiAgICAgICAgPGZvcm0gY2xhc3M9XCJtb2RhbC1mb3JtXCI+XG5cbiAgICAgICAgICA8IS0tIOy5tO2FjOqzoOumrCAtLT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1pdGVtIGZvcm0taXRlbS0tcmVxdWlyZWRcIj5cbiAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJjYXRlZ29yeSB0ZXh0LWNhcHRpb25cIj7subTthYzqs6Drpqw8L2xhYmVsPlxuICAgICAgICAgICAgPHNlbGVjdCBuYW1lPVwiY2F0ZWdvcnlcIiBpZD1cImNhdGVnb3J5XCIgcmVxdWlyZWQ+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJcIj7shKDtg53tlbQg7KO87IS47JqUPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCLtlZzsi51cIj7tlZzsi508L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIuykkeyLnVwiPuykkeyLnTwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwi7J287IudXCI+7J287IudPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCLslpHsi51cIj7slpHsi508L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIuyVhOyLnOyViFwiPuyVhOyLnOyViDwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwi6riw7YOAXCI+6riw7YOAPC9vcHRpb24+XG4gICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDwhLS0g7J2M7Iud7KCQIOydtOumhCAtLT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1pdGVtIGZvcm0taXRlbS0tcmVxdWlyZWRcIj5cbiAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJuYW1lIHRleHQtY2FwdGlvblwiPuydtOumhDwvbGFiZWw+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwibmFtZVwiIGlkPVwibmFtZVwiIHJlcXVpcmVkPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPCEtLSDqsbDrpqwgLS0+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0taXRlbSBmb3JtLWl0ZW0tLXJlcXVpcmVkXCI+XG4gICAgICAgICAgICA8bGFiZWwgZm9yPVwiZGlzdGFuY2UgdGV4dC1jYXB0aW9uXCI+6rGw66asKOuPhOuztCDsnbTrj5kg7Iuc6rCEKSA8L2xhYmVsPlxuICAgICAgICAgICAgPHNlbGVjdCBuYW1lPVwiZGlzdGFuY2VcIiBpZD1cImRpc3RhbmNlXCIgcmVxdWlyZWQ+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJcIj7shKDtg53tlbQg7KO87IS47JqUPC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCI1XCI+Neu2hCDrgrQ8L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjEwXCI+MTDrtoQg64K0PC9vcHRpb24+XG4gICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCIxNVwiPjE167aEIOuCtDwvb3B0aW9uPlxuICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiMjBcIj4yMOu2hCDrgrQ8L29wdGlvbj5cbiAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIjMwXCI+MzDrtoQg64K0PC9vcHRpb24+XG4gICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDwhLS0g7ISk66qFIC0tPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWl0ZW1cIj5cbiAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJkZXNjcmlwdGlvbiB0ZXh0LWNhcHRpb25cIj7shKTrqoU8L2xhYmVsPlxuICAgICAgICAgICAgPHRleHRhcmVhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGlkPVwiZGVzY3JpcHRpb25cIiBjb2xzPVwiMzBcIiByb3dzPVwiNVwiPjwvdGV4dGFyZWE+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImhlbHAtdGV4dCB0ZXh0LWNhcHRpb25cIj7rqZTribQg65OxIOy2lOqwgCDsoJXrs7Trpbwg7J6F66Cl7ZW0IOyjvOyEuOyalC48L3NwYW4+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8IS0tIOunge2BrCAtLT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1pdGVtXCI+XG4gICAgICAgICAgICA8bGFiZWwgZm9yPVwibGluayB0ZXh0LWNhcHRpb25cIj7ssLjqs6Ag66eB7YGsPC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJsaW5rXCIgaWQ9XCJsaW5rXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImhlbHAtdGV4dCB0ZXh0LWNhcHRpb25cIj7rp6TsnqUg7KCV67O066W8IO2ZleyduO2VoCDsiJgg7J6I64qUIOunge2BrOulvCDsnoXroKXtlbQg7KO87IS47JqULjwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDwhLS0g7Leo7IaML+y2lOqwgCDrsoTtirwgLS0+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImJ1dHRvbi1jb250YWluZXJcIj5cbiAgICAgICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYnV0dG9uIGJ1dHRvbi0tc2Vjb25kYXJ5IHRleHQtY2FwdGlvblwiPuy3qOyGjO2VmOq4sDwvYnV0dG9uPlxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ1dHRvbiBidXR0b24tLXByaW1hcnkgdGV4dC1jYXB0aW9uXCI+7LaU6rCA7ZWY6riwPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZm9ybT5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIGApO1xuICAgICAgICB0aGlzLmNsb3NlTW9kYWwgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlc2V0VmFsdWUoKTtcbiAgICAgICAgICAgICQoJy5tb2RhbCcpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMucmVzdGF1cmFudExpc3QgPSByZXN0YXVyYW50TGlzdDtcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50UmVnaXN0cnkgPSByZXN0YXVyYW50UmVnaXN0cnk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX01vZGFsX3RlbXBsYXRlLCBcImZcIikpO1xuICAgIH1cbiAgICBpbml0aWFsaXplQnV0dG9uRXZlbnRzKCkge1xuICAgICAgICAkKCcubW9kYWwtZm9ybScpLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGV2ZW50ID0+IHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB0aGlzLmFkZFJlc3RhdXJhbnQoKTtcbiAgICAgICAgfSk7XG4gICAgICAgICQoJy5idXR0b24tLXNlY29uZGFyeScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jbG9zZU1vZGFsKTtcbiAgICB9XG4gICAgYWRkUmVzdGF1cmFudCgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIG5hbWVWYWxpZGF0aW9uKCQoJyNuYW1lJykudmFsdWUpO1xuICAgICAgICAgICAgY29uc3QgcmVzdGF1cmFudEluZm8gPSB0aGlzLnNldFJlc3RhdXJhbnRJbmZvcm1hdGlvbigpO1xuICAgICAgICAgICAgdGhpcy5yZXN0YXVyYW50TGlzdC5hZGQocmVzdGF1cmFudEluZm8pO1xuICAgICAgICAgICAgdGhpcy5yZXN0YXVyYW50UmVnaXN0cnkuYXBwZW5kUmVzdGF1cmFudCh0aGlzLnJlc3RhdXJhbnRMaXN0Lmxpc3RSZXN0YXVyYW50W3RoaXMuZ2V0UmVzdGF1cmFudExlbmd0aCgpXSk7XG4gICAgICAgICAgICBSZXN0YXVyYW50SW52ZW50b3J5LmZhdm9yaXRlVGFiVG9BbGxMaXN0VGFiKCk7XG4gICAgICAgICAgICB0aGlzLnJlc3RhdXJhbkxpc3RGaWx0ZXIoKTtcbiAgICAgICAgICAgIHRoaXMuY2xvc2VNb2RhbCgpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgYWxlcnQoZXJyb3IubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVzdGF1cmFuTGlzdEZpbHRlcigpIHtcbiAgICAgICAgY29uc3QgZm9vZENhdGVnb3J5ID0gZ2V0VmFsdWVGcm9tTG9jYWxTdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuRk9PRENBVEVHT1JZLCBMT0NBTF9JTlBVVC5BTExfQ0FURUdPUlkpO1xuICAgICAgICBjb25zdCBzb3J0QnkgPSBnZXRWYWx1ZUZyb21Mb2NhbFN0b3JhZ2UoTE9DQUxTVE9SQUdFX0tFWS5TT1JUQlksIEZPUk1fVkFMVUUuTkFNRSk7XG4gICAgICAgIHRoaXMucmVzdGF1cmFudExpc3QuZmlsdGVyQ2F0ZWdvcnkoZm9vZENhdGVnb3J5KTtcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50TGlzdC5maWx0ZXJCeVNvcnQoc29ydEJ5LCBmb29kQ2F0ZWdvcnkpO1xuICAgIH1cbiAgICBzZXRSZXN0YXVyYW50SW5mb3JtYXRpb24oKSB7XG4gICAgICAgIGNvbnN0IHJlc3RhdXJhbnRJbmZvID0ge307XG4gICAgICAgIGNvbnN0IGlkTnVtYmVyID0gZ2V0UmVzdGF1cmFudExpc3RGcm9tTG9jYWxzdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuTlVNQkVSKTtcbiAgICAgICAgY29uc3QgYXJyYXkgPSBbXG4gICAgICAgICAgICBGT1JNX1ZBTFVFLkNBVEVHT1JZLFxuICAgICAgICAgICAgRk9STV9WQUxVRS5OQU1FLFxuICAgICAgICAgICAgRk9STV9WQUxVRS5ESVNUQU5DRSxcbiAgICAgICAgICAgIEZPUk1fVkFMVUUuREVTQ1JJUFRJT04sXG4gICAgICAgICAgICBGT1JNX1ZBTFVFLkxJTkssXG4gICAgICAgICAgICBMT0NBTF9JTlBVVC5GQVZPUklURSxcbiAgICAgICAgXTtcbiAgICAgICAgJCQoJy5mb3JtLWl0ZW0nKS5mb3JFYWNoKCh2YWwsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICByZXN0YXVyYW50SW5mb1thcnJheVtpbmRleF1dID0gdmFsLmNoaWxkcmVuWzFdLnZhbHVlO1xuICAgICAgICB9KTtcbiAgICAgICAgcmVzdGF1cmFudEluZm9bTE9DQUxfSU5QVVQuSURdID0gaWROdW1iZXI7XG4gICAgICAgIHJlc3RhdXJhbnRJbmZvW0xPQ0FMX0lOUFVULkZBVk9SSVRFXSA9IEZBVk9SSVRFX0lDT04uVU5FTlJPTEw7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExPQ0FMU1RPUkFHRV9LRVkuTlVNQkVSLCBpZE51bWJlciArIDEpO1xuICAgICAgICByZXR1cm4gcmVzdGF1cmFudEluZm87XG4gICAgfVxuICAgIGdldFJlc3RhdXJhbnRMZW5ndGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlc3RhdXJhbnRMaXN0Lmxpc3RSZXN0YXVyYW50Lmxlbmd0aCAtIDE7XG4gICAgfVxuICAgIHJlc2V0VmFsdWUoKSB7XG4gICAgICAgICQkKCcuZm9ybS1pdGVtJykuZm9yRWFjaCgodmFsLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgaWYgKGluZGV4ID09PSBOVU1CRVJfRk9STS5DQVRFR09SWSB8fCBpbmRleCA9PT0gTlVNQkVSX0ZPUk0uRElTVEFOQ0UpIHtcbiAgICAgICAgICAgICAgICB2YWwuY2hpbGRyZW5bTlVNQkVSX0ZPUk0uSU5GT1JNQVRJT05fUkVTVEFVUkFOVF0udmFsdWUgPSAnJztcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YWwuY2hpbGRyZW5bTlVNQkVSX0ZPUk0uSU5GT1JNQVRJT05fUkVTVEFVUkFOVF0udmFsdWUgPSBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5fTW9kYWxfdGVtcGxhdGUgPSBuZXcgV2Vha01hcCgpO1xuIiwiaW1wb3J0IHsgZ2V0UmVzdGF1cmFudExpc3RGcm9tTG9jYWxzdG9yYWdlIH0gZnJvbSAnLi9Mb2NhbFN0b3JhZ2UnO1xuaW1wb3J0IHsgTE9DQUxTVE9SQUdFX0tFWSB9IGZyb20gJy4vQ29uc3RhbnQnO1xuY29uc3QgbmFtZUNvdW50TGltaXRWYWxpZGF0aW9uID0gbmFtZSA9PiB7XG4gICAgcmV0dXJuIG5hbWUubGVuZ3RoID4gMTA7XG59O1xuY29uc3QgbmFtZUV4aXN0VmFsaWRhdGlvbiA9IG5hbWUgPT4ge1xuICAgIHJldHVybiBuYW1lLnRyaW0oKSA9PT0gJyc7XG59O1xuY29uc3QgbmFtZVJlcGVhdFZhbGlkYXRpb24gPSBuYW1lID0+IHtcbiAgICBjb25zdCByZXN0YXVyYW50cyA9IGdldFJlc3RhdXJhbnRMaXN0RnJvbUxvY2Fsc3RvcmFnZShMT0NBTFNUT1JBR0VfS0VZLlJFU1RBVVJBTlQpO1xuICAgIGlmIChyZXN0YXVyYW50cy5sZW5ndGggPT09IDApXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gcmVzdGF1cmFudHMuc29tZShyZXN0YXVyYW50ID0+IHJlc3RhdXJhbnQubmFtZSA9PT0gbmFtZSk7XG59O1xuZXhwb3J0IGNvbnN0IG5hbWVWYWxpZGF0aW9uID0gbmFtZSA9PiB7XG4gICAgaWYgKG5hbWVDb3VudExpbWl0VmFsaWRhdGlvbihuYW1lKSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdbRXJyb3JdIOydtOumhOydgCAxMOyekCDsnbTtlZjrp4wg7J6F66ClIOqwgOuKpe2VqeuLiOuLpC4nKTtcbiAgICBpZiAobmFtZUV4aXN0VmFsaWRhdGlvbihuYW1lKSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdbRXJyb3JdIOydtOumhOydgCDqs7XrsLHsnLzroZzrp4wg7J2066Oo7Ja07KeIIOyImCDsl4bsirXri4jri6QuJyk7XG4gICAgaWYgKG5hbWVSZXBlYXRWYWxpZGF0aW9uKG5hbWUpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1tFcnJvcl0g7J2066aE7J2AIOykkeuzteuQoCDsiJgg7JeG7Iq164uI64ukLicpO1xufTtcbiIsInZhciBfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0ID0gKHRoaXMgJiYgdGhpcy5fX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KSB8fCBmdW5jdGlvbiAocmVjZWl2ZXIsIHN0YXRlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwiYVwiICYmICFmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBhY2Nlc3NvciB3YXMgZGVmaW5lZCB3aXRob3V0IGEgZ2V0dGVyXCIpO1xuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHJlYWQgcHJpdmF0ZSBtZW1iZXIgZnJvbSBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiBraW5kID09PSBcIm1cIiA/IGYgOiBraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlcikgOiBmID8gZi52YWx1ZSA6IHN0YXRlLmdldChyZWNlaXZlcik7XG59O1xudmFyIF9GaWx0ZXJCYXJfdGVtcGxhdGU7XG5pbXBvcnQgeyAkIH0gZnJvbSAnLi4vdXRpbHMvRG9tJztcbmltcG9ydCB7IExPQ0FMU1RPUkFHRV9LRVkgfSBmcm9tICcuLi91dGlscy9Db25zdGFudCc7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGaWx0ZXJCYXIge1xuICAgIGNvbnN0cnVjdG9yKHJlc3RhdXJhbnRMaXN0LCByZXN0YXVyYW50UmVnaXN0cnkpIHtcbiAgICAgICAgX0ZpbHRlckJhcl90ZW1wbGF0ZS5zZXQodGhpcywgYFxuICAgIDxtYWluPlxuICAgICAgICA8c2VjdGlvbiBjbGFzcz1cInJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPHNlbGVjdCBuYW1lPVwiY2F0ZWdvcnlcIiBpZD1cImNhdGVnb3J5LWZpbHRlclwiIGNsYXNzPVwicmVzdGF1cmFudC1maWx0ZXJcIj5cbiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwi7KCE7LK0XCI+7KCE7LK0PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIu2VnOyLnVwiPu2VnOyLnTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCLspJHsi51cIj7spJHsi508L29wdGlvbj5cbiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwi7J287IudXCI+7J287IudPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIuyWkeyLnVwiPuyWkeyLnTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCLslYTsi5zslYhcIj7slYTsi5zslYg8L29wdGlvbj5cbiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwi6riw7YOAXCI+6riw7YOAPC9vcHRpb24+XG4gICAgICAgICAgICA8L3NlbGVjdD5cblxuICAgICAgICAgICAgPCEtLSDsoJXroKwg7IWA66CJ7Yq4IOuwleyKpCAtLT5cbiAgICAgICAgICAgIDxzZWxlY3QgbmFtZT1cInNvcnRpbmdcIiBpZD1cInNvcnRpbmctZmlsdGVyXCIgY2xhc3M9XCJyZXN0YXVyYW50LWZpbHRlclwiPlxuICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJuYW1lXCI+7J2066aE7IicPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImRpc3RhbmNlXCI+6rGw66as7IicPC9vcHRpb24+XG4gICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgIDwvbWFpbj5cbiBgKTtcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50TGlzdCA9IHJlc3RhdXJhbnRMaXN0O1xuICAgICAgICB0aGlzLnJlc3RhdXJhbnRSZWdpc3RyeSA9IHJlc3RhdXJhbnRSZWdpc3RyeTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBkb2N1bWVudC5ib2R5Lmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgX19jbGFzc1ByaXZhdGVGaWVsZEdldCh0aGlzLCBfRmlsdGVyQmFyX3RlbXBsYXRlLCBcImZcIikpO1xuICAgIH1cbiAgICBpbml0aWFsaXplQnV0dG9uRXZlbnRzKCkge1xuICAgICAgICBjb25zdCBzZWxlY3RlZCA9ICQoJyNjYXRlZ29yeS1maWx0ZXInKTtcbiAgICAgICAgc2VsZWN0ZWQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRWYWx1ZSA9IHNlbGVjdGVkLm9wdGlvbnNbc2VsZWN0ZWQuc2VsZWN0ZWRJbmRleF0udmFsdWU7XG4gICAgICAgICAgICB0aGlzLnJlc3RhdXJhbnRMaXN0LmZpbHRlckNhdGVnb3J5KHNlbGVjdGVkVmFsdWUpO1xuICAgICAgICAgICAgdGhpcy5yZXN0YXVyYW50TGlzdC5maWx0ZXJCeVNvcnQobG9jYWxTdG9yYWdlLmdldEl0ZW0oTE9DQUxTVE9SQUdFX0tFWS5TT1JUQlkpLCBzZWxlY3RlZFZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHNvcnRlZCA9ICQoJyNzb3J0aW5nLWZpbHRlcicpO1xuICAgICAgICBzb3J0ZWQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc29ydGVkVmFsdWUgPSBzb3J0ZWQub3B0aW9uc1tzb3J0ZWQuc2VsZWN0ZWRJbmRleF0udmFsdWU7XG4gICAgICAgICAgICB0aGlzLnJlc3RhdXJhbnRMaXN0LmZpbHRlckJ5U29ydChzb3J0ZWRWYWx1ZSwgbG9jYWxTdG9yYWdlLmdldEl0ZW0oTE9DQUxTVE9SQUdFX0tFWS5GT09EQ0FURUdPUlkpKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuX0ZpbHRlckJhcl90ZW1wbGF0ZSA9IG5ldyBXZWFrTWFwKCk7XG4iLCJ2YXIgX19jbGFzc1ByaXZhdGVGaWVsZEdldCA9ICh0aGlzICYmIHRoaXMuX19jbGFzc1ByaXZhdGVGaWVsZEdldCkgfHwgZnVuY3Rpb24gKHJlY2VpdmVyLCBzdGF0ZSwga2luZCwgZikge1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIGdldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcbiAgICByZXR1cm4ga2luZCA9PT0gXCJtXCIgPyBmIDoga2luZCA9PT0gXCJhXCIgPyBmLmNhbGwocmVjZWl2ZXIpIDogZiA/IGYudmFsdWUgOiBzdGF0ZS5nZXQocmVjZWl2ZXIpO1xufTtcbnZhciBfTW9kYWxSZXN0YXVyYW50RGV0YWlsX3RlbXBsYXRlO1xuaW1wb3J0IHsgJCB9IGZyb20gJy4uL3V0aWxzL0RvbSc7XG5pbXBvcnQgeyBnZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UsIGdldFZhbHVlRnJvbUxvY2FsU3RvcmFnZSwgc2V0VG9Mb2NhbFN0b3JhZ2UgfSBmcm9tICcuLi91dGlscy9Mb2NhbFN0b3JhZ2UnO1xuaW1wb3J0IHsgTE9DQUxTVE9SQUdFX0tFWSwgTE9DQUxfSU5QVVQsIEZBVk9SSVRFX0lDT04sIFBJQ1RVUkVfUEFUSCwgRk9STV9WQUxVRSB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50JztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vZGFsUmVzdGF1cmFudERldGFpbCB7XG4gICAgY29uc3RydWN0b3IocmVzdGF1cmFudExpc3QsIHJlc3RhdXJhbnRSZWdpc3RyeSkge1xuICAgICAgICBfTW9kYWxSZXN0YXVyYW50RGV0YWlsX3RlbXBsYXRlLnNldCh0aGlzLCBgXG4gICAgPGRpdiBjbGFzcz1cIm1vZGFsLS1kZXRhaWxcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1iYWNrZHJvcFwiPjwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWNvbnRhaW5lclwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwtcGljdHVyZS1mYXZvcml0ZVwiPlxuICAgICAgICAgIDwhLS0g7Lm07YWM6rOg66asIOyCrOynhCAtLT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGV0YWlsLWl0ZW0gcmVzdGF1cmFudF9fY2F0ZWdvcnlcIj5cbiAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJjYXRlZ29yeS1pY29uIG1vZGFsLWRldGFpbC1yZXN0YXVyYW50X19pbWFnZVwiPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPCEtLSDsppDqsqjssL7quLAgLS0+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGxhLS1yZXN0YXVyYW50X2Zhdm9yaXRlXCI+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPCEtLSDsnYzsi53soJAg7J2066aEIC0tPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXRhaWwtaXRlbVwiPlxuICAgICAgICAgICAgPGgzIGNsYXNzPVwicmVzdGF1cmFudF9fbmFtZSAgbW9kYWwtZGV0YWlsLXJlc3RhdXJhbnRfX25hbWUgdGV4dC1zdWJ0aXRsZVwiPjwvaDM+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8IS0tIOqxsOumrCAtLT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGV0YWlsLWl0ZW1cIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicmVzdGF1cmFudF9fZGlzdGFuY2UgbW9kYWwtZGV0YWlsLXJlc3RhdXJhbnRfX2Rpc3RhbmNlIHRleHQtYm9keVwiPjwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDwhLS0g7ISk66qFIC0tPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXRhaWwtaXRlbVwiPlxuICAgICAgICAgICAgPHAgY2xhc3M9XCJtb2RhbC1kZXRhaWwtcmVzdGF1cmFudF9fZGVzY3JpcHRpb24gdGV4dC1ib2R5XCI+PC9wPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPCEtLSDrp4HtgawgLS0+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImRldGFpbC1pdGVtXCI+XG4gICAgICAgICAgICA8YSBjbGFzcz1cIm1vZGFsLWRldGFpbC1yZXN0YXVyYW50X19saW5rXCI+PC9hPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPCEtLSDst6jshowv7LaU6rCAIOuyhO2KvCAtLT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiYnV0dG9uLWNvbnRhaW5lciBkZXRhaWwtYnV0dG9uLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidXR0b24gYnV0dG9uLS1kZWxldGUgdGV4dC1jYXB0aW9uXCI+7IKt7KCc7ZWY6riwPC9idXR0b24+XG4gICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImJ1dHRvbiBidXR0b24tLWNsb3NlIHRleHQtY2FwdGlvblwiPuuLq+q4sDwvYnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgYCk7XG4gICAgICAgIHRoaXMuZGVsZXRlQnV0dG9uSW5EZXRhaWwgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlc3RhdXJhbnRMaXN0LmRlbGV0ZVJlc3RhdXJhbnRFbGVtZW50KCk7XG4gICAgICAgICAgICBpZiAoJCgnLmZhdm9yaXRlLXJlc3RhdXJhbnQnKS5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdGF1cmFudEFsbCA9IGdldFJlc3RhdXJhbnRMaXN0RnJvbUxvY2Fsc3RvcmFnZShMT0NBTFNUT1JBR0VfS0VZLkZBVk9SSVRFKSB8fCBbXTtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlTW9kYWxEZXRhaWwoKTtcbiAgICAgICAgICAgICAgICAkKCcucmVzdGF1cmFudC1saXN0JykucmVwbGFjZUNoaWxkcmVuKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5yZXN0YXVyYW50UmVnaXN0cnkuYXR0YWNoUmVzdGF1cmFudFRvUmVnaXN0cnkocmVzdGF1cmFudEFsbCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5yZXN0YXVyYW5MaXN0RmlsdGVyKCk7XG4gICAgICAgICAgICB0aGlzLmNsb3NlTW9kYWxEZXRhaWwoKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5mYXZvcml0ZUV2ZW50ID0gZSA9PiB0aGlzLmNsaWNrTW9kYWxGYXZvcml0ZShlLCB0aGlzLnJlc3RhdXJhbnRJbmZvKTtcbiAgICAgICAgdGhpcy5jbG9zZU1vZGFsRGV0YWlsID0gKCkgPT4ge1xuICAgICAgICAgICAgJCgnLm1vZGFsLS1kZXRhaWwnKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgJCgnLm1vZGFsLS1kZXRhaWwnKS5yZW1vdmVBdHRyaWJ1dGUoJ2lkJyk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMucmVzdGF1cmFudExpc3QgPSByZXN0YXVyYW50TGlzdDtcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50UmVnaXN0cnkgPSByZXN0YXVyYW50UmVnaXN0cnk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIF9fY2xhc3NQcml2YXRlRmllbGRHZXQodGhpcywgX01vZGFsUmVzdGF1cmFudERldGFpbF90ZW1wbGF0ZSwgXCJmXCIpKTtcbiAgICB9XG4gICAgaW5pdGlhbGl6ZUJ1dHRvbkV2ZW50cygpIHtcbiAgICAgICAgJCgnLmJ1dHRvbi0tY2xvc2UnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuY2xvc2VNb2RhbERldGFpbCk7XG4gICAgICAgICQoJy5idXR0b24tLWRlbGV0ZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5kZWxldGVCdXR0b25JbkRldGFpbCk7XG4gICAgfVxuICAgIHJlc3RhdXJhbkxpc3RGaWx0ZXIoKSB7XG4gICAgICAgIGNvbnN0IGZvb2RDYXRlZ29yeSA9IGdldFZhbHVlRnJvbUxvY2FsU3RvcmFnZShMT0NBTFNUT1JBR0VfS0VZLkZPT0RDQVRFR09SWSwgTE9DQUxfSU5QVVQuQUxMX0NBVEVHT1JZKTtcbiAgICAgICAgY29uc3Qgc29ydEJ5ID0gZ2V0VmFsdWVGcm9tTG9jYWxTdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuU09SVEJZLCBGT1JNX1ZBTFVFLk5BTUUpO1xuICAgICAgICB0aGlzLnJlc3RhdXJhbnRMaXN0LmZpbHRlckNhdGVnb3J5KGZvb2RDYXRlZ29yeSk7XG4gICAgICAgIHRoaXMucmVzdGF1cmFudExpc3QuZmlsdGVyQnlTb3J0KHNvcnRCeSwgZm9vZENhdGVnb3J5KTtcbiAgICB9XG4gICAgY2hhbmdlUmVzdGF1cmFudEluZm9ybWF0aW9uKHJlc3RhdXJhbnRJbmZvKSB7XG4gICAgICAgIHRoaXMucmVzdGF1cmFudEluZm8gPSByZXN0YXVyYW50SW5mbztcbiAgICAgICAgdGhpcy5zZXRSZXN0YXVyYW50SW5mb3JtYXRpb24ocmVzdGF1cmFudEluZm8pO1xuICAgICAgICAkKGAubW9kbGEtLXJlc3RhdXJhbnRfaW1hZ2VgKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuZmF2b3JpdGVFdmVudCk7XG4gICAgfVxuICAgIHNldFJlc3RhdXJhbnRJbmZvcm1hdGlvbihyZXN0YXVyYW50SW5mbykge1xuICAgICAgICB0aGlzLnNldFJlc3RhdXJhbnRJZChyZXN0YXVyYW50SW5mbyk7XG4gICAgICAgIHRoaXMuc2V0UmVzdGF1cmFudENhdGVnb3J5KHJlc3RhdXJhbnRJbmZvKTtcbiAgICAgICAgdGhpcy5zZXRSZXN0YXVyYW50TmFtZShyZXN0YXVyYW50SW5mbyk7XG4gICAgICAgIHRoaXMuc2V0UmVzdGF1cmFudERpc3RhbmNlKHJlc3RhdXJhbnRJbmZvKTtcbiAgICAgICAgdGhpcy5zZXRSZXN0YXVyYW50RGVzY3JpcHRpb24ocmVzdGF1cmFudEluZm8pO1xuICAgICAgICB0aGlzLnNldFJlc3RhdXJhbnRMaW5rKHJlc3RhdXJhbnRJbmZvKTtcbiAgICAgICAgdGhpcy5zZXRSZXN0YXVyYW50RmF2b3JpdGUocmVzdGF1cmFudEluZm8pO1xuICAgIH1cbiAgICBzZXRSZXN0YXVyYW50SWQocmVzdGF1cmFudEluZm8pIHtcbiAgICAgICAgJCgnLm1vZGFsLS1kZXRhaWwnKS5pZCA9IHJlc3RhdXJhbnRJbmZvLmlkO1xuICAgIH1cbiAgICBzZXRSZXN0YXVyYW50Q2F0ZWdvcnkocmVzdGF1cmFudEluZm8pIHtcbiAgICAgICAgY29uc3QgY2F0ZWdvcnkgPSB7XG4gICAgICAgICAgICDtlZzsi506IFBJQ1RVUkVfUEFUSC5LT1JFQU4sXG4gICAgICAgICAgICDsnbzsi506IFBJQ1RVUkVfUEFUSC5KQVBBTkVTRSxcbiAgICAgICAgICAgIOyWkeyLnTogUElDVFVSRV9QQVRILkFNRVJJQ0FOLFxuICAgICAgICAgICAg7KSR7IudOiBQSUNUVVJFX1BBVEguQ0hJTkVTRSxcbiAgICAgICAgICAgIOyVhOyLnOyViDogUElDVFVSRV9QQVRILkFTSUFOLFxuICAgICAgICAgICAg6riw7YOAOiBQSUNUVVJFX1BBVEguRVRDLFxuICAgICAgICB9O1xuICAgICAgICAkKCcubW9kYWwtZGV0YWlsLXJlc3RhdXJhbnRfX2ltYWdlJykuc2V0QXR0cmlidXRlKCdzcmMnLCBjYXRlZ29yeVtyZXN0YXVyYW50SW5mby5jYXRlZ29yeV0pO1xuICAgICAgICAkKCcubW9kYWwtZGV0YWlsLXJlc3RhdXJhbnRfX2ltYWdlJykuc2V0QXR0cmlidXRlKCdhbHQnLCByZXN0YXVyYW50SW5mby5jYXRlZ29yeSk7XG4gICAgfVxuICAgIHNldFJlc3RhdXJhbnROYW1lKHJlc3RhdXJhbnRJbmZvKSB7XG4gICAgICAgICQoJy5tb2RhbC1kZXRhaWwtcmVzdGF1cmFudF9fbmFtZScpLnRleHRDb250ZW50ID0gcmVzdGF1cmFudEluZm8ubmFtZTtcbiAgICB9XG4gICAgc2V0UmVzdGF1cmFudERpc3RhbmNlKHJlc3RhdXJhbnRJbmZvKSB7XG4gICAgICAgICQoJy5tb2RhbC1kZXRhaWwtcmVzdGF1cmFudF9fZGlzdGFuY2UnKS50ZXh0Q29udGVudCA9IGDsuqDtjbzsiqTroZzrtoDthLAgJHtyZXN0YXVyYW50SW5mby5kaXN0YW5jZX3rtoQg64K0YDtcbiAgICB9XG4gICAgc2V0UmVzdGF1cmFudERlc2NyaXB0aW9uKHJlc3RhdXJhbnRJbmZvKSB7XG4gICAgICAgICQoJy5tb2RhbC1kZXRhaWwtcmVzdGF1cmFudF9fZGVzY3JpcHRpb24nKS50ZXh0Q29udGVudCA9IHJlc3RhdXJhbnRJbmZvLmRlc2NyaXB0aW9uO1xuICAgIH1cbiAgICBzZXRSZXN0YXVyYW50TGluayhyZXN0YXVyYW50SW5mbykge1xuICAgICAgICAkKCcubW9kYWwtZGV0YWlsLXJlc3RhdXJhbnRfX2xpbmsnKS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCByZXN0YXVyYW50SW5mby5saW5rKTtcbiAgICAgICAgJCgnLm1vZGFsLWRldGFpbC1yZXN0YXVyYW50X19saW5rJykudGV4dENvbnRlbnQgPSByZXN0YXVyYW50SW5mby5saW5rO1xuICAgIH1cbiAgICBzZXRSZXN0YXVyYW50RmF2b3JpdGUocmVzdGF1cmFudEluZm8pIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VGYXZvcml0ZUltZyhGQVZPUklURV9JQ09OLlVORU5ST0xMKTtcbiAgICAgICAgdGhpcy5vcGVuTW9kYWxEZXRhaWwoKTtcbiAgICAgICAgKGdldFJlc3RhdXJhbnRMaXN0RnJvbUxvY2Fsc3RvcmFnZShMT0NBTFNUT1JBR0VfS0VZLkZBVk9SSVRFKSA/PyBbXSkuZm9yRWFjaCh2YWwgPT4ge1xuICAgICAgICAgICAgaWYgKHZhbC5pZCA9PT0gcmVzdGF1cmFudEluZm8uaWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUZhdm9yaXRlSW1nKEZBVk9SSVRFX0lDT04uRU5ST0xMKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNoYW5nZUZhdm9yaXRlSW1nKGZhdm9yaXRlKSB7XG4gICAgICAgICQoYC5tb2RsYS0tcmVzdGF1cmFudF9mYXZvcml0ZWApLnJlcGxhY2VDaGlsZHJlbigpO1xuICAgICAgICAkKGAubW9kbGEtLXJlc3RhdXJhbnRfZmF2b3JpdGVgKS5pbm5lckhUTUwgKz0gYDxpbWcgY2xhc3M9XCJtb2RsYS0tcmVzdGF1cmFudF9pbWFnZVwiIHNyYz1cIiR7ZmF2b3JpdGV9XCI+YDtcbiAgICB9XG4gICAgY2xpY2tNb2RhbEZhdm9yaXRlKGUsIHJlc3RhdXJhbnRJbmZvKSB7XG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIGlmICh0aGlzLmlzRmlsbGVkT3JMaW5lZChlLCBGQVZPUklURV9JQ09OLkVOUk9MTCkpIHtcbiAgICAgICAgICAgIHRoaXMuaWZGYXZvcml0ZUZpbGxlZChlLCByZXN0YXVyYW50SW5mbyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuaXNGaWxsZWRPckxpbmVkKGUsIEZBVk9SSVRFX0lDT04uVU5FTlJPTEwpKSB7XG4gICAgICAgICAgICB0aGlzLmlmRmF2b3JpdGVMaW5lZChlLCByZXN0YXVyYW50SW5mbyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9XG4gICAgaXNGaWxsZWRPckxpbmVkKGUsIGZhdm9yaXRlKSB7XG4gICAgICAgIHJldHVybiBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ3NyYycpID09PSBmYXZvcml0ZTtcbiAgICB9XG4gICAgZ2V0RmF2b3JpdGVMaXN0KGZhdm9yaXRlX2ljb24sIHJlc3RhdXJhbnRJbmZvKSB7XG4gICAgICAgIGNvbnN0IHJlc3RhdXJhbnRfY29weSA9IFsuLi5nZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UoTE9DQUxTVE9SQUdFX0tFWS5SRVNUQVVSQU5UKV07XG4gICAgICAgIHJldHVybiByZXN0YXVyYW50X2NvcHkubWFwKHJlc3RhdXJhbnQgPT4ge1xuICAgICAgICAgICAgaWYgKHJlc3RhdXJhbnQuaWQgPT09IHJlc3RhdXJhbnRJbmZvLmlkKVxuICAgICAgICAgICAgICAgIHJlc3RhdXJhbnRbTE9DQUxfSU5QVVQuRkFWT1JJVEVdID0gZmF2b3JpdGVfaWNvbjtcbiAgICAgICAgICAgIHJldHVybiByZXN0YXVyYW50O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgaWZGYXZvcml0ZUZpbGxlZChlLCByZXN0YXVyYW50SW5mbykge1xuICAgICAgICBjb25zdCByZXN0YXVyYW50RmF2b3JpdGVMaXN0ID0gdGhpcy5nZXRGYXZvcml0ZUxpc3QoRkFWT1JJVEVfSUNPTi5VTkVOUk9MTCwgcmVzdGF1cmFudEluZm8pO1xuICAgICAgICBzZXRUb0xvY2FsU3RvcmFnZShMT0NBTFNUT1JBR0VfS0VZLlJFU1RBVVJBTlQsIHJlc3RhdXJhbnRGYXZvcml0ZUxpc3QpO1xuICAgICAgICBjb25zdCByZXMgPSBnZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UoTE9DQUxTVE9SQUdFX0tFWS5GQVZPUklURSkgPz8gW107XG4gICAgICAgIGNvbnN0IGRlbGV0ZWRSZXN0YXVyYW50RWxlbWVudEFycmF5ID0gcmVzLmZpbHRlcih2YWwgPT4gdmFsLmlkICE9PSByZXN0YXVyYW50SW5mby5pZCk7XG4gICAgICAgIHNldFRvTG9jYWxTdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuRkFWT1JJVEUsIGRlbGV0ZWRSZXN0YXVyYW50RWxlbWVudEFycmF5KTtcbiAgICAgICAgdGhpcy5jaGFuZ2VGYXZvcml0ZUltYWdlQXR0cmlidXQoZSwgcmVzdGF1cmFudEluZm8sIEZBVk9SSVRFX0lDT04uVU5FTlJPTEwpO1xuICAgIH1cbiAgICBpZkZhdm9yaXRlTGluZWQoZSwgcmVzdGF1cmFudEluZm8pIHtcbiAgICAgICAgY29uc3QgcmVzdGF1cmFudEZhdm9yaXRlTGlzdCA9IHRoaXMuZ2V0RmF2b3JpdGVMaXN0KEZBVk9SSVRFX0lDT04uRU5ST0xMLCByZXN0YXVyYW50SW5mbyk7XG4gICAgICAgIHNldFRvTG9jYWxTdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuUkVTVEFVUkFOVCwgcmVzdGF1cmFudEZhdm9yaXRlTGlzdCk7XG4gICAgICAgIGNvbnN0IGZhdm9yaXRlTGlzdCA9IGdldFJlc3RhdXJhbnRMaXN0RnJvbUxvY2Fsc3RvcmFnZShMT0NBTFNUT1JBR0VfS0VZLkZBVk9SSVRFKSA/PyBbXTtcbiAgICAgICAgY29uc3QgZmF2b3JpdGUgPSBbLi4uZmF2b3JpdGVMaXN0XTtcbiAgICAgICAgZmF2b3JpdGUucHVzaChyZXN0YXVyYW50SW5mbyk7XG4gICAgICAgIHNldFRvTG9jYWxTdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuRkFWT1JJVEUsIGZhdm9yaXRlKTtcbiAgICAgICAgdGhpcy5jaGFuZ2VGYXZvcml0ZUltYWdlQXR0cmlidXQoZSwgcmVzdGF1cmFudEluZm8sIEZBVk9SSVRFX0lDT04uRU5ST0xMKTtcbiAgICB9XG4gICAgY2hhbmdlRmF2b3JpdGVJbWFnZUF0dHJpYnV0KGUsIHJlc3RhdXJhbnRJbmZvLCBmYXZvcml0ZSkge1xuICAgICAgICAkKGAucmVzdGF1cmFudF9mYXZvcml0ZSR7cmVzdGF1cmFudEluZm8uaWR9YCkuY2hpbGRyZW5bMF0uc2V0QXR0cmlidXRlKCdzcmMnLCBmYXZvcml0ZSk7XG4gICAgICAgIGUudGFyZ2V0LnNldEF0dHJpYnV0ZSgnc3JjJywgZmF2b3JpdGUpO1xuICAgIH1cbiAgICBvcGVuTW9kYWxEZXRhaWwoKSB7XG4gICAgICAgICQoJy5tb2RhbC0tZGV0YWlsJykuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgfVxufVxuX01vZGFsUmVzdGF1cmFudERldGFpbF90ZW1wbGF0ZSA9IG5ldyBXZWFrTWFwKCk7XG4iLCJpbXBvcnQgeyAkIH0gZnJvbSAnLi4vdXRpbHMvRG9tJztcbmltcG9ydCBNb2RhbFJlc3RhdXJhbnREZXRhaWwgZnJvbSAnLi9Nb2RhbFJlc3RhdXJhbnREZXRhaWwnO1xuaW1wb3J0IHsgc3RyaW5naWZ5SnNvbiwgZ2V0UmVzdGF1cmFudExpc3RGcm9tTG9jYWxzdG9yYWdlLCBzZXRUb0xvY2FsU3RvcmFnZSB9IGZyb20gJy4uL3V0aWxzL0xvY2FsU3RvcmFnZSc7XG5pbXBvcnQgeyBMT0NBTFNUT1JBR0VfS0VZLCBMT0NBTF9JTlBVVCwgRkFWT1JJVEVfSUNPTiB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50JztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlc3RhdXJhbnRSZWdpc3RyeSB7XG4gICAgYXBwZW5kUmVzdGF1cmFudChyZXN0YXVyYW50SW5mbykge1xuICAgICAgICBjb25zdCBjYXRlZ29yeSA9IHtcbiAgICAgICAgICAgIO2VnOyLnTogJy4vY2F0ZWdvcnkta29yZWFuLnBuZycsXG4gICAgICAgICAgICDsnbzsi506ICcuL2NhdGVnb3J5LWphcGFuZXNlLnBuZycsXG4gICAgICAgICAgICDslpHsi506ICcuL2NhdGVnb3J5LXdlc3Rlcm4ucG5nJyxcbiAgICAgICAgICAgIOykkeyLnTogJy4vY2F0ZWdvcnktY2hpbmVzZS5wbmcnLFxuICAgICAgICAgICAg7JWE7Iuc7JWIOiAnLi9jYXRlZ29yeS1hc2lhbi5wbmcnLFxuICAgICAgICAgICAg6riw7YOAOiAnLi9jYXRlZ29yeS1ldGMucG5nJyxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgdGVtcGxhdGUgPSBgXG4gICAgPGxpIGNsYXNzPVwicmVzdGF1cmFudFwiIGlkPVwicmVzdGF1cmFudCR7cmVzdGF1cmFudEluZm8uaWR9XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJyZXN0YXVyYW50X2luZm9cIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVzdGF1cmFudF9fY2F0ZWdvcnlcIj5cbiAgICAgICAgICAgIDxpbWcgc3JjPVwiJHtjYXRlZ29yeVtyZXN0YXVyYW50SW5mby5jYXRlZ29yeV19XCIgYWx0PVwiJHtyZXN0YXVyYW50SW5mby5jYXRlZ29yeX1cIiBjbGFzcz1cImNhdGVnb3J5LWljb25cIj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVzdGF1cmFudF9faW5mb1wiPlxuICAgICAgICAgICAgPGgzIGNsYXNzPVwicmVzdGF1cmFudF9fbmFtZSB0ZXh0LXN1YnRpdGxlXCI+JHtyZXN0YXVyYW50SW5mby5uYW1lfTwvaDM+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cInJlc3RhdXJhbnRfX2Rpc3RhbmNlIHRleHQtYm9keVwiPuy6oO2NvOyKpOuhnOu2gO2EsCAke3Jlc3RhdXJhbnRJbmZvLmRpc3RhbmNlfeu2hCDrgrQ8L3NwYW4+XG4gICAgICAgICAgICA8cCBjbGFzcz1cInJlc3RhdXJhbnRfX2Rlc2NyaXB0aW9uIHRleHQtYm9keVwiPiR7cmVzdGF1cmFudEluZm8uZGVzY3JpcHRpb259PC9wPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj4gIFxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJyZXN0YXVyYW50X2Zhdm9yaXRlJHtyZXN0YXVyYW50SW5mby5pZH1cIj5cbiAgICAgICAgICAgIDxpbWcgc3JjPSR7cmVzdGF1cmFudEluZm8uZmF2b3JpdGV9PlxuICAgICAgICAgIDwvZGl2PlxuICAgIDwvbGk+XG4gICAgYDtcbiAgICAgICAgJCgnLnJlc3RhdXJhbnQtbGlzdCcpLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgdGVtcGxhdGUpO1xuICAgICAgICAkKGAjcmVzdGF1cmFudCR7cmVzdGF1cmFudEluZm8uaWR9YCkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBtb2RhbFJlc3RhdXJhbnREZXRhaWwgPSBuZXcgTW9kYWxSZXN0YXVyYW50RGV0YWlsKCk7XG4gICAgICAgICAgICBtb2RhbFJlc3RhdXJhbnREZXRhaWwuY2hhbmdlUmVzdGF1cmFudEluZm9ybWF0aW9uKHJlc3RhdXJhbnRJbmZvKTtcbiAgICAgICAgfSk7XG4gICAgICAgICQoYC5yZXN0YXVyYW50X2Zhdm9yaXRlJHtyZXN0YXVyYW50SW5mby5pZH1gKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xuICAgICAgICAgICAgdGhpcy5jbGlja01vZGFsRmF2b3JpdGUoZSwgcmVzdGF1cmFudEluZm8pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgY2xpY2tNb2RhbEZhdm9yaXRlKGUsIHJlc3RhdXJhbnRJbmZvKSB7XG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIGlmICh0aGlzLmlzRmlsbGVkT3JMaW5lZChlLCBGQVZPUklURV9JQ09OLkVOUk9MTCkpIHtcbiAgICAgICAgICAgIHRoaXMuaWZGYXZvcml0ZUZpbGxlZChlLCByZXN0YXVyYW50SW5mbyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuaXNGaWxsZWRPckxpbmVkKGUsIEZBVk9SSVRFX0lDT04uVU5FTlJPTEwpKSB7XG4gICAgICAgICAgICB0aGlzLmlmRmF2b3JpdGVMaW5lZChlLCByZXN0YXVyYW50SW5mbyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9XG4gICAgaXNGaWxsZWRPckxpbmVkKGUsIGZhdm9yaXRlKSB7XG4gICAgICAgIHJldHVybiBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ3NyYycpID09PSBmYXZvcml0ZTtcbiAgICB9XG4gICAgZ2V0RmF2b3JpdGVMaXN0KGZhdm9yaXRlX2ljb24sIHJlc3RhdXJhbnRJbmZvKSB7XG4gICAgICAgIGNvbnN0IHJlc3RhdXJhbnRfY29weSA9IFsuLi5nZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UoTE9DQUxTVE9SQUdFX0tFWS5SRVNUQVVSQU5UKV07XG4gICAgICAgIHJldHVybiByZXN0YXVyYW50X2NvcHkubWFwKHJlc3RhdXJhbnQgPT4ge1xuICAgICAgICAgICAgaWYgKHJlc3RhdXJhbnQuaWQgPT09IHJlc3RhdXJhbnRJbmZvLmlkKVxuICAgICAgICAgICAgICAgIHJlc3RhdXJhbnRbTE9DQUxfSU5QVVQuRkFWT1JJVEVdID0gZmF2b3JpdGVfaWNvbjtcbiAgICAgICAgICAgIHJldHVybiByZXN0YXVyYW50O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgaWZGYXZvcml0ZUZpbGxlZChlLCByZXN0YXVyYW50SW5mbykge1xuICAgICAgICBjb25zdCByZXN0YXVyYW50RmF2b3JpdGVMaXN0ID0gdGhpcy5nZXRGYXZvcml0ZUxpc3QoRkFWT1JJVEVfSUNPTi5VTkVOUk9MTCwgcmVzdGF1cmFudEluZm8pO1xuICAgICAgICBzZXRUb0xvY2FsU3RvcmFnZShMT0NBTFNUT1JBR0VfS0VZLlJFU1RBVVJBTlQsIHJlc3RhdXJhbnRGYXZvcml0ZUxpc3QpO1xuICAgICAgICBjb25zdCByZXMgPSBnZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UoTE9DQUxTVE9SQUdFX0tFWS5GQVZPUklURSkgPz8gW107XG4gICAgICAgIGNvbnN0IGRlbGV0ZWRSZXN0YXVyYW50RWxlbWVudEFycmF5ID0gcmVzLmZpbHRlcih2YWwgPT4gdmFsLmlkICE9PSByZXN0YXVyYW50SW5mby5pZCk7XG4gICAgICAgIHNldFRvTG9jYWxTdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuRkFWT1JJVEUsIGRlbGV0ZWRSZXN0YXVyYW50RWxlbWVudEFycmF5KTtcbiAgICAgICAgdGhpcy5jaGFuZ2VGYXZvcml0ZUltYWdlQXR0cmlidXQoZSwgcmVzdGF1cmFudEluZm8sIEZBVk9SSVRFX0lDT04uVU5FTlJPTEwpO1xuICAgIH1cbiAgICBpZkZhdm9yaXRlTGluZWQoZSwgcmVzdGF1cmFudEluZm8pIHtcbiAgICAgICAgY29uc3QgcmVzdGF1cmFudEZhdm9yaXRlTGlzdCA9IHRoaXMuZ2V0RmF2b3JpdGVMaXN0KEZBVk9SSVRFX0lDT04uRU5ST0xMLCByZXN0YXVyYW50SW5mbyk7XG4gICAgICAgIHNldFRvTG9jYWxTdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuUkVTVEFVUkFOVCwgcmVzdGF1cmFudEZhdm9yaXRlTGlzdCk7XG4gICAgICAgIGNvbnN0IGZhdm9yaXRlTGlzdCA9IGdldFJlc3RhdXJhbnRMaXN0RnJvbUxvY2Fsc3RvcmFnZShMT0NBTFNUT1JBR0VfS0VZLkZBVk9SSVRFKSA/PyBbXTtcbiAgICAgICAgY29uc3QgZmF2b3JpdGUgPSBbLi4uZmF2b3JpdGVMaXN0XTtcbiAgICAgICAgZmF2b3JpdGUucHVzaChyZXN0YXVyYW50SW5mbyk7XG4gICAgICAgIHNldFRvTG9jYWxTdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuRkFWT1JJVEUsIGZhdm9yaXRlKTtcbiAgICAgICAgdGhpcy5jaGFuZ2VGYXZvcml0ZUltYWdlQXR0cmlidXQoZSwgcmVzdGF1cmFudEluZm8sIEZBVk9SSVRFX0lDT04uRU5ST0xMKTtcbiAgICB9XG4gICAgY2hhbmdlRmF2b3JpdGVJbWFnZUF0dHJpYnV0KGUsIHJlc3RhdXJhbnRJbmZvLCBmYXZvcml0ZSkge1xuICAgICAgICAkKGAucmVzdGF1cmFudF9mYXZvcml0ZSR7cmVzdGF1cmFudEluZm8uaWR9YCkuY2hpbGRyZW5bMF0uc2V0QXR0cmlidXRlKCdzcmMnLCBmYXZvcml0ZSk7XG4gICAgICAgIGUudGFyZ2V0LnNldEF0dHJpYnV0ZSgnc3JjJywgZmF2b3JpdGUpO1xuICAgIH1cbiAgICBhdHRhY2hSZXN0YXVyYW50VG9SZWdpc3RyeShyZXN0YXVyYW50UGFyc2VkSW5mbykge1xuICAgICAgICByZXN0YXVyYW50UGFyc2VkSW5mby5mb3JFYWNoKHZhbHVlID0+IHtcbiAgICAgICAgICAgIHRoaXMuYXBwZW5kUmVzdGF1cmFudCh2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IHNvcnRCeU5hbWUsIHNvcnRCeURpc3RhbmNlIH0gZnJvbSAnLi4vdXRpbHMvU29ydCc7XG5pbXBvcnQgeyAkIH0gZnJvbSAnLi4vdXRpbHMvRG9tJztcbmltcG9ydCBSZXN0YXVyYW50UmVnaXN0cnkgZnJvbSAnLi4vVUkvUmVzdGF1cmFudFJlZ2lzdHJ5JztcbmltcG9ydCB7IGdldFJlc3RhdXJhbnRMaXN0RnJvbUxvY2Fsc3RvcmFnZSwgc3RyaW5naWZ5SnNvbiB9IGZyb20gJy4uL3V0aWxzL0xvY2FsU3RvcmFnZSc7XG5pbXBvcnQgeyBMT0NBTFNUT1JBR0VfS0VZLCBMT0NBTF9JTlBVVCwgRk9STV9WQUxVRSB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50JztcbmV4cG9ydCBjbGFzcyBSZXN0YXVyYW50TGlzdCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMubGlzdCA9IFtdO1xuICAgICAgICBjb25zdCByZXMgPSBnZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UoTE9DQUxTVE9SQUdFX0tFWS5SRVNUQVVSQU5UKSA/PyBbXTtcbiAgICAgICAgaWYgKHJlcy5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgIHJlcy5mb3JFYWNoKCh2YWwpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmxpc3QucHVzaCh2YWwpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5yZXN0YXVyYW50UmVnaXN0cnkgPSBuZXcgUmVzdGF1cmFudFJlZ2lzdHJ5KCk7XG4gICAgfVxuICAgIGFkZChyZXN0YXVyYW50SW5mbykge1xuICAgICAgICBjb25zdCByZXMgPSBnZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UoTE9DQUxTVE9SQUdFX0tFWS5SRVNUQVVSQU5UKSA/PyBbXTtcbiAgICAgICAgdGhpcy5saXN0ID0gWy4uLnJlcywgcmVzdGF1cmFudEluZm9dO1xuICAgICAgICBjb25zdCByZXN0YXVyYW50U3RyaW5nID0gc3RyaW5naWZ5SnNvbih0aGlzLmxpc3QpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShMT0NBTFNUT1JBR0VfS0VZLlJFU1RBVVJBTlQsIHJlc3RhdXJhbnRTdHJpbmcpO1xuICAgIH1cbiAgICBnZXQgbGlzdFJlc3RhdXJhbnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3Q7XG4gICAgfVxuICAgIGNhdGVnb3J5RmlsdGVyKGNhdGVnb3J5KSB7XG4gICAgICAgIGNvbnN0IGZpbHRlcmVkTGlzdCA9IFtdO1xuICAgICAgICBpZiAoY2F0ZWdvcnkgPT09IExPQ0FMX0lOUFVULkFMTF9DQVRFR09SWSkge1xuICAgICAgICAgICAgY29uc3QgcmVzID0gZ2V0UmVzdGF1cmFudExpc3RGcm9tTG9jYWxzdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuUkVTVEFVUkFOVCkgPz8gW107XG4gICAgICAgICAgICB0aGlzLmxpc3QgPSBbLi4ucmVzXTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3Q7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZm9vZEZpbHRlcihjYXRlZ29yeSwgZmlsdGVyZWRMaXN0KTtcbiAgICB9XG4gICAgZm9vZEZpbHRlcihjYXRlZ29yeSwgZmlsdGVyZWRMaXN0KSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IGdldFJlc3RhdXJhbnRMaXN0RnJvbUxvY2Fsc3RvcmFnZShMT0NBTFNUT1JBR0VfS0VZLlJFU1RBVVJBTlQpID8/IFtdO1xuICAgICAgICB0aGlzLmxpc3QgPSBbLi4ucmVzXTtcbiAgICAgICAgdGhpcy5saXN0LmZpbHRlcihpbmZvID0+IHtcbiAgICAgICAgICAgIGlmIChpbmZvLmNhdGVnb3J5ID09PSBjYXRlZ29yeSlcbiAgICAgICAgICAgICAgICBmaWx0ZXJlZExpc3QucHVzaChpbmZvKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBmaWx0ZXJlZExpc3Q7XG4gICAgfVxuICAgIGZpbHRlckNhdGVnb3J5KHNlbGVjdGVkVmFsdWUpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oTE9DQUxTVE9SQUdFX0tFWS5GT09EQ0FURUdPUlksIHNlbGVjdGVkVmFsdWUpO1xuICAgICAgICAkKCcucmVzdGF1cmFudC1saXN0JykucmVwbGFjZUNoaWxkcmVuKCk7XG4gICAgICAgIGNvbnN0IHJlc3RhdXJhbnRQYXJzZWRJbmZvID0gdGhpcy5jYXRlZ29yeUZpbHRlcihzZWxlY3RlZFZhbHVlKTtcbiAgICAgICAgdGhpcy5hdHRhY2hSZXN0YXVyYW50VG9SZWdpc3RyeShyZXN0YXVyYW50UGFyc2VkSW5mbyk7XG4gICAgfVxuICAgIGZpbHRlckJ5U29ydChzb3J0QnksIGZvb2RDYXRlZ29yeSkge1xuICAgICAgICAkKCcucmVzdGF1cmFudC1saXN0JykucmVwbGFjZUNoaWxkcmVuKCk7XG4gICAgICAgIGNvbnN0IHJlc3RhdXJhbnRQYXJzZWRJbmZvID0gdGhpcy5jYXRlZ29yeUZpbHRlcihmb29kQ2F0ZWdvcnkpO1xuICAgICAgICBpZiAoc29ydEJ5ID09PSBGT1JNX1ZBTFVFLk5BTUUpXG4gICAgICAgICAgICBzb3J0QnlOYW1lKHJlc3RhdXJhbnRQYXJzZWRJbmZvKTtcbiAgICAgICAgaWYgKHNvcnRCeSA9PT0gRk9STV9WQUxVRS5ESVNUQU5DRSlcbiAgICAgICAgICAgIHNvcnRCeURpc3RhbmNlKHJlc3RhdXJhbnRQYXJzZWRJbmZvKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oTE9DQUxTVE9SQUdFX0tFWS5TT1JUQlksIHNvcnRCeSk7XG4gICAgICAgIHRoaXMuYXR0YWNoUmVzdGF1cmFudFRvUmVnaXN0cnkocmVzdGF1cmFudFBhcnNlZEluZm8pO1xuICAgIH1cbiAgICBhdHRhY2hSZXN0YXVyYW50VG9SZWdpc3RyeShyZXN0YXVyYW50UGFyc2VkSW5mbykge1xuICAgICAgICByZXN0YXVyYW50UGFyc2VkSW5mby5mb3JFYWNoKHZhbHVlID0+IHtcbiAgICAgICAgICAgIHRoaXMucmVzdGF1cmFudFJlZ2lzdHJ5LmFwcGVuZFJlc3RhdXJhbnQodmFsdWUpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZGVsZXRlUmVzdGF1cmFudEVsZW1lbnQoKSB7XG4gICAgICAgIGNvbnN0IHJlc3RhdXJhbnRJZCA9ICQoJy5tb2RhbC0tZGV0YWlsJykuaWQ7XG4gICAgICAgIGNvbnN0IHJlcyA9IGdldFJlc3RhdXJhbnRMaXN0RnJvbUxvY2Fsc3RvcmFnZShMT0NBTFNUT1JBR0VfS0VZLlJFU1RBVVJBTlQpID8/IFtdO1xuICAgICAgICBjb25zdCBkZWxldGVkUmVzdGF1cmFudEVsZW1lbnRBcnJheSA9IHJlcy5maWx0ZXIoKHZhbCkgPT4gdmFsLmlkICE9PSBOdW1iZXIocmVzdGF1cmFudElkKSk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExPQ0FMU1RPUkFHRV9LRVkuUkVTVEFVUkFOVCwgc3RyaW5naWZ5SnNvbihkZWxldGVkUmVzdGF1cmFudEVsZW1lbnRBcnJheSkpO1xuICAgICAgICB0aGlzLmxpc3QgPSBnZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UoTE9DQUxTVE9SQUdFX0tFWS5SRVNUQVVSQU5UKSA/PyBbXTtcbiAgICAgICAgY29uc3QgcmVzdGFydWFudEZhdm9yaXRlID0gZ2V0UmVzdGF1cmFudExpc3RGcm9tTG9jYWxzdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuRkFWT1JJVEUpID8/IFtdO1xuICAgICAgICBjb25zdCBkZWxldGVkUmVzdGF1cmFudEVsZW1lbnRMaXN0ID0gcmVzdGFydWFudEZhdm9yaXRlLmZpbHRlcigodmFsKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdmFsLmlkICE9PSBOdW1iZXIocmVzdGF1cmFudElkKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExPQ0FMU1RPUkFHRV9LRVkuRkFWT1JJVEUsIHN0cmluZ2lmeUpzb24oZGVsZXRlZFJlc3RhdXJhbnRFbGVtZW50TGlzdCkpO1xuICAgIH1cbn1cbiIsImV4cG9ydCBjb25zdCBzb3J0QnlOYW1lID0gKHJlc3RhdXJhbnQpID0+IHtcbiAgICByZXR1cm4gcmVzdGF1cmFudC5zb3J0KChwcmV2LCBuZXh0KSA9PiB7XG4gICAgICAgIGlmIChwcmV2Lm5hbWUgPiBuZXh0Lm5hbWUpXG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgaWYgKHByZXYubmFtZSA8IG5leHQubmFtZSlcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfSk7XG59O1xuZXhwb3J0IGNvbnN0IHNvcnRCeURpc3RhbmNlID0gKHJlc3RhdXJhbnQpID0+IHtcbiAgICByZXR1cm4gcmVzdGF1cmFudC5zb3J0KChwcmV2LCBuZXh0KSA9PiBwcmV2LmRpc3RhbmNlIC0gbmV4dC5kaXN0YW5jZSk7XG59O1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2duYi5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2duYi5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbW9kYWwuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tb2RhbC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcmVzdGF1cmFudExpc3QuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9yZXN0YXVyYW50TGlzdC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW52ZW50b3J5LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW52ZW50b3J5LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJhZGQtYnV0dG9uLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS1hc2lhbi5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiY2F0ZWdvcnkta29yZWFuLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS1jaGluZXNlLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS1ldGMucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImNhdGVnb3J5LWphcGFuZXNlLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS13ZXN0ZXJuLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmYXZvcml0ZS1pY29uLWZpbGxlZC5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZmF2b3JpdGUtaWNvbi1saW5lZC5wbmdcIjsiLCJpbXBvcnQgeyBBcHAgfSBmcm9tICcuL0FwcCc7XG5pbXBvcnQgJy4vY3NzL3N0eWxlLmNzcyc7XG5pbXBvcnQgJy4vY3NzL2duYi5jc3MnO1xuaW1wb3J0ICcuL2Nzcy9tb2RhbC5jc3MnO1xuaW1wb3J0ICcuL2Nzcy9yZXN0YXVyYW50TGlzdC5jc3MnO1xuaW1wb3J0ICcuL2Nzcy9pbnZlbnRvcnkuY3NzJztcbmltcG9ydCAnLi9hc3NldHMvYWRkLWJ1dHRvbi5wbmcnO1xuaW1wb3J0ICcuL2Fzc2V0cy9jYXRlZ29yeS1hc2lhbi5wbmcnO1xuaW1wb3J0ICcuL2Fzc2V0cy9jYXRlZ29yeS1rb3JlYW4ucG5nJztcbmltcG9ydCAnLi9hc3NldHMvY2F0ZWdvcnktY2hpbmVzZS5wbmcnO1xuaW1wb3J0ICcuL2Fzc2V0cy9jYXRlZ29yeS1ldGMucG5nJztcbmltcG9ydCAnLi9hc3NldHMvY2F0ZWdvcnktamFwYW5lc2UucG5nJztcbmltcG9ydCAnLi9hc3NldHMvY2F0ZWdvcnktd2VzdGVybi5wbmcnO1xuaW1wb3J0ICcuL2Fzc2V0cy9mYXZvcml0ZS1pY29uLWZpbGxlZC5wbmcnO1xuaW1wb3J0ICcuL2Fzc2V0cy9mYXZvcml0ZS1pY29uLWxpbmVkLnBuZyc7XG5uZXcgQXBwKCk7XG4iLCJpbXBvcnQgSGVhZGVyIGZyb20gJy4vVUkvSGVhZGVyLmpzJztcbmltcG9ydCBSZXN0YXVyYW50Q29udGFpbmVyIGZyb20gJy4vVUkvUmVzdGF1cmFudENvbnRhaW5lci5qcyc7XG5pbXBvcnQgTW9kYWwgZnJvbSAnLi9VSS9Nb2RhbCc7XG5pbXBvcnQgRmlsdGVyQmFyIGZyb20gJy4vVUkvRmlsdGVyQmFyJztcbmltcG9ydCB7IFJlc3RhdXJhbnRMaXN0IH0gZnJvbSAnLi9kb21haW4vUmVzdGF1cmFudExpc3QnO1xuaW1wb3J0IFJlc3RhdXJhbnRSZWdpc3RyeSBmcm9tICcuL1VJL1Jlc3RhdXJhbnRSZWdpc3RyeS5qcyc7XG5pbXBvcnQgeyBnZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UsIHN0cmluZ2lmeUpzb24gfSBmcm9tICcuL3V0aWxzL0xvY2FsU3RvcmFnZS5qcyc7XG5pbXBvcnQgeyBMT0NBTFNUT1JBR0VfS0VZLCBMT0NBTF9JTlBVVCwgRk9STV9WQUxVRSwgRkFWT1JJVEVfSUNPTiB9IGZyb20gJy4vdXRpbHMvQ29uc3RhbnQnO1xuaW1wb3J0IE1vZGFsUmVzdGF1cmFudERldGFpbCBmcm9tICcuL1VJL01vZGFsUmVzdGF1cmFudERldGFpbC5qcyc7XG5pbXBvcnQgUmVzdGF1cmFudEludmVudG9yeSBmcm9tICcuL1VJL1Jlc3RhdXJhbnRJbnZlbnRvcnkuanMnO1xuZXhwb3J0IGNsYXNzIEFwcCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucmVzdGF1cmFudExpc3QgPSBuZXcgUmVzdGF1cmFudExpc3QoKTtcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50UmVnaXN0cnkgPSBuZXcgUmVzdGF1cmFudFJlZ2lzdHJ5KCk7XG4gICAgICAgIHRoaXMuaGVhZGVyID0gbmV3IEhlYWRlcigpO1xuICAgICAgICB0aGlzLm1vZGFsID0gbmV3IE1vZGFsKHRoaXMucmVzdGF1cmFudExpc3QsIHRoaXMucmVzdGF1cmFudFJlZ2lzdHJ5KTtcbiAgICAgICAgdGhpcy5maWx0ZXIgPSBuZXcgRmlsdGVyQmFyKHRoaXMucmVzdGF1cmFudExpc3QsIHRoaXMucmVzdGF1cmFudFJlZ2lzdHJ5KTtcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50SW52ZW50b3J5ID0gbmV3IFJlc3RhdXJhbnRJbnZlbnRvcnkodGhpcy5yZXN0YXVyYW50UmVnaXN0cnkpO1xuICAgICAgICB0aGlzLnJlc3RhdXJhbnRDb250YWluZXIgPSBuZXcgUmVzdGF1cmFudENvbnRhaW5lcigpO1xuICAgICAgICB0aGlzLm1vZGFsUmVzdGF1cmFudERldGFpbCA9IG5ldyBNb2RhbFJlc3RhdXJhbnREZXRhaWwodGhpcy5yZXN0YXVyYW50TGlzdCwgdGhpcy5yZXN0YXVyYW50UmVnaXN0cnkpO1xuICAgICAgICBjb25zdCBsb2NhbFJlc3RhdXJhbnRzID0gZ2V0UmVzdGF1cmFudExpc3RGcm9tTG9jYWxzdG9yYWdlKExPQ0FMU1RPUkFHRV9LRVkuUkVTVEFVUkFOVCk7XG4gICAgICAgIHRoaXMuY29sbGVjdGVkUmVuZGVyKCk7XG4gICAgICAgIHRoaXMuaW5pdGlhbGl6ZUJ1dHRvbkV2ZW50cygpO1xuICAgICAgICBpZiAobG9jYWxSZXN0YXVyYW50cyAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgbG9jYWxSZXN0YXVyYW50TmV4dE51bWJlciA9IGxvY2FsUmVzdGF1cmFudHMuYXQoLTEpLmlkICsgMTtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExPQ0FMU1RPUkFHRV9LRVkuTlVNQkVSLCBsb2NhbFJlc3RhdXJhbnROZXh0TnVtYmVyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShMT0NBTFNUT1JBR0VfS0VZLk5VTUJFUiwgMCk7XG4gICAgICAgIGNvbnN0IGZhdm9yaXRlTGlzdCA9IGdldFJlc3RhdXJhbnRMaXN0RnJvbUxvY2Fsc3RvcmFnZShMT0NBTFNUT1JBR0VfS0VZLkZBVk9SSVRFKTtcbiAgICAgICAgY29uc3QgcmVzdGF1cmFudEZhdm9yaXRlTGlzdCA9IGxvY2FsUmVzdGF1cmFudHMgfHxcbiAgICAgICAgICAgIFtdLm1hcChyZXN0YXVyYW50ID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc1RoZXJlUmVzdGF1cmFudEluRmF2b3JpdGVzKGZhdm9yaXRlTGlzdCwgcmVzdGF1cmFudCkubGVuZ3RoKVxuICAgICAgICAgICAgICAgICAgICByZXN0YXVyYW50W0xPQ0FMX0lOUFVULkZBVk9SSVRFXSA9IEZBVk9SSVRFX0lDT04uRU5ST0xMO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN0YXVyYW50O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExPQ0FMU1RPUkFHRV9LRVkuUkVTVEFVUkFOVCwgc3RyaW5naWZ5SnNvbihyZXN0YXVyYW50RmF2b3JpdGVMaXN0KSk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExPQ0FMU1RPUkFHRV9LRVkuU09SVEJZLCBGT1JNX1ZBTFVFLk5BTUUpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShMT0NBTFNUT1JBR0VfS0VZLkZPT0RDQVRFR09SWSwgTE9DQUxfSU5QVVQuQUxMX0NBVEVHT1JZKTtcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50TGlzdC5maWx0ZXJCeVNvcnQoRk9STV9WQUxVRS5OQU1FLCBMT0NBTF9JTlBVVC5BTExfQ0FURUdPUlkpO1xuICAgIH1cbiAgICBpc1RoZXJlUmVzdGF1cmFudEluRmF2b3JpdGVzKGZhdm9yaXRlTGlzdCwgcmVzdGF1cmFudCkge1xuICAgICAgICByZXR1cm4gZmF2b3JpdGVMaXN0LmZpbHRlcih2YWwgPT4gdmFsLmlkID09PSByZXN0YXVyYW50LmlkKS5sZW5ndGg7XG4gICAgfVxuICAgIGNvbGxlY3RlZFJlbmRlcigpIHtcbiAgICAgICAgdGhpcy5oZWFkZXIucmVuZGVyKCk7XG4gICAgICAgIHRoaXMubW9kYWwucmVuZGVyKCk7XG4gICAgICAgIHRoaXMuZmlsdGVyLnJlbmRlcigpO1xuICAgICAgICB0aGlzLnJlc3RhdXJhbnRJbnZlbnRvcnkucmVuZGVyKCk7XG4gICAgICAgIHRoaXMucmVzdGF1cmFudENvbnRhaW5lci5yZW5kZXIoKTtcbiAgICAgICAgdGhpcy5tb2RhbFJlc3RhdXJhbnREZXRhaWwucmVuZGVyKCk7XG4gICAgfVxuICAgIGluaXRpYWxpemVCdXR0b25FdmVudHMoKSB7XG4gICAgICAgIHRoaXMuaGVhZGVyLmluaXRpYWxpemVCdXR0b25FdmVudHMoKTtcbiAgICAgICAgdGhpcy5tb2RhbC5pbml0aWFsaXplQnV0dG9uRXZlbnRzKCk7XG4gICAgICAgIHRoaXMuZmlsdGVyLmluaXRpYWxpemVCdXR0b25FdmVudHMoKTtcbiAgICAgICAgdGhpcy5tb2RhbFJlc3RhdXJhbnREZXRhaWwuaW5pdGlhbGl6ZUJ1dHRvbkV2ZW50cygpO1xuICAgICAgICB0aGlzLnJlc3RhdXJhbnRJbnZlbnRvcnkuaW5pdGlhbGl6ZUJ1dHRvbkV2ZW50cygpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJyZXBsYWNlIiwicCIsIm5jIiwiJCIsInNlbGVjdG9yIiwiJCQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiX0hlYWRlcl90ZW1wbGF0ZSIsIkhlYWRlciIsImNvbnN0cnVjdG9yIiwic2V0IiwiaW5pdGlhbGl6ZUJ1dHRvbkV2ZW50cyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZWxvYWQiLCJvcGVuTW9kYWwiLCJyZW5kZXIiLCJib2R5IiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwicmVjZWl2ZXIiLCJzdGF0ZSIsImtpbmQiLCJmIiwiVHlwZUVycm9yIiwiaGFzIiwidmFsdWUiLCJfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0IiwiZGlzcGxheSIsIldlYWtNYXAiLCJfUmVzdGF1cmFudENvbnRhaW5lcl90ZW1wbGF0ZSIsIlJlc3RhdXJhbnRDb250YWluZXIiLCJMT0NBTFNUT1JBR0VfS0VZIiwiRk9STV9WQUxVRSIsIkxPQ0FMX0lOUFVUIiwiRkFWT1JJVEVfSUNPTiIsImdldFZhbHVlRnJvbUxvY2FsU3RvcmFnZSIsImRlZmF1bHRWYWx1ZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJnZXRSZXN0YXVyYW50TGlzdEZyb21Mb2NhbHN0b3JhZ2UiLCJwYXJzZSIsInN0cmluZ2lmeUpzb24iLCJzZXRUb0xvY2FsU3RvcmFnZSIsInJlc3RhdXJhbnRzIiwic2V0SXRlbSIsIl9SZXN0YXVyYW50SW52ZW50b3J5X3RlbXBsYXRlIiwiUmVzdGF1cmFudEludmVudG9yeSIsInJlc3RhdXJhbnRSZWdpc3RyeSIsImZhdm9yaXRlVGFiVG9BbGxMaXN0VGFiIiwicmVwbGFjZUNoaWxkcmVuIiwicmVzdGF1cmFudEFsbCIsImF0dGFjaFJlc3RhdXJhbnRUb1JlZ2lzdHJ5IiwiYWxsTGlzdFRhYlRvRmF2b3JpdGVUYWIiLCJyZXN0YXVyYW50RmF2b3JpdGUiLCJmb3JFYWNoIiwicmVzdGF1cmFudCIsImNsYXNzTGlzdCIsImFkZCIsImNsYXNzTmFtZSIsIl9Nb2RhbF90ZW1wbGF0ZSIsIk1vZGFsIiwicmVzdGF1cmFudExpc3QiLCJjbG9zZU1vZGFsIiwicmVzZXRWYWx1ZSIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJhZGRSZXN0YXVyYW50IiwibmFtZSIsIm5hbWVDb3VudExpbWl0VmFsaWRhdGlvbiIsInRyaW0iLCJuYW1lRXhpc3RWYWxpZGF0aW9uIiwic29tZSIsIm5hbWVSZXBlYXRWYWxpZGF0aW9uIiwibmFtZVZhbGlkYXRpb24iLCJyZXN0YXVyYW50SW5mbyIsInNldFJlc3RhdXJhbnRJbmZvcm1hdGlvbiIsImFwcGVuZFJlc3RhdXJhbnQiLCJsaXN0UmVzdGF1cmFudCIsImdldFJlc3RhdXJhbnRMZW5ndGgiLCJyZXN0YXVyYW5MaXN0RmlsdGVyIiwiZXJyb3IiLCJhbGVydCIsIm1lc3NhZ2UiLCJmb29kQ2F0ZWdvcnkiLCJzb3J0QnkiLCJmaWx0ZXJDYXRlZ29yeSIsImZpbHRlckJ5U29ydCIsImlkTnVtYmVyIiwiYXJyYXkiLCJ2YWwiLCJjaGlsZHJlbiIsIl9GaWx0ZXJCYXJfdGVtcGxhdGUiLCJGaWx0ZXJCYXIiLCJzZWxlY3RlZCIsInNlbGVjdGVkVmFsdWUiLCJzZWxlY3RlZEluZGV4Iiwic29ydGVkIiwic29ydGVkVmFsdWUiLCJfTW9kYWxSZXN0YXVyYW50RGV0YWlsX3RlbXBsYXRlIiwiTW9kYWxSZXN0YXVyYW50RGV0YWlsIiwiZGVsZXRlQnV0dG9uSW5EZXRhaWwiLCJkZWxldGVSZXN0YXVyYW50RWxlbWVudCIsImNvbnRhaW5zIiwiY2xvc2VNb2RhbERldGFpbCIsImZhdm9yaXRlRXZlbnQiLCJjbGlja01vZGFsRmF2b3JpdGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJjaGFuZ2VSZXN0YXVyYW50SW5mb3JtYXRpb24iLCJzZXRSZXN0YXVyYW50SWQiLCJzZXRSZXN0YXVyYW50Q2F0ZWdvcnkiLCJzZXRSZXN0YXVyYW50TmFtZSIsInNldFJlc3RhdXJhbnREaXN0YW5jZSIsInNldFJlc3RhdXJhbnREZXNjcmlwdGlvbiIsInNldFJlc3RhdXJhbnRMaW5rIiwic2V0UmVzdGF1cmFudEZhdm9yaXRlIiwiY2F0ZWdvcnkiLCJ0ZXh0Q29udGVudCIsImRpc3RhbmNlIiwiZGVzY3JpcHRpb24iLCJsaW5rIiwiY2hhbmdlRmF2b3JpdGVJbWciLCJvcGVuTW9kYWxEZXRhaWwiLCJmYXZvcml0ZSIsImlubmVySFRNTCIsInN0b3BQcm9wYWdhdGlvbiIsImlzRmlsbGVkT3JMaW5lZCIsImlmRmF2b3JpdGVGaWxsZWQiLCJpZkZhdm9yaXRlTGluZWQiLCJnZXRBdHRyaWJ1dGUiLCJnZXRGYXZvcml0ZUxpc3QiLCJmYXZvcml0ZV9pY29uIiwicmVzdGF1cmFudEZhdm9yaXRlTGlzdCIsImRlbGV0ZWRSZXN0YXVyYW50RWxlbWVudEFycmF5IiwiZmlsdGVyIiwiY2hhbmdlRmF2b3JpdGVJbWFnZUF0dHJpYnV0IiwiUmVzdGF1cmFudFJlZ2lzdHJ5IiwidGVtcGxhdGUiLCJyZXN0YXVyYW50UGFyc2VkSW5mbyIsIlJlc3RhdXJhbnRMaXN0IiwicmVzIiwicmVzdGF1cmFudFN0cmluZyIsImNhdGVnb3J5RmlsdGVyIiwiZm9vZEZpbHRlciIsImZpbHRlcmVkTGlzdCIsImluZm8iLCJzb3J0IiwicHJldiIsIm5leHQiLCJyZXN0YXVyYW50SWQiLCJOdW1iZXIiLCJkZWxldGVkUmVzdGF1cmFudEVsZW1lbnRMaXN0IiwiaGVhZGVyIiwibW9kYWwiLCJyZXN0YXVyYW50SW52ZW50b3J5IiwicmVzdGF1cmFudENvbnRhaW5lciIsIm1vZGFsUmVzdGF1cmFudERldGFpbCIsImxvY2FsUmVzdGF1cmFudHMiLCJjb2xsZWN0ZWRSZW5kZXIiLCJsb2NhbFJlc3RhdXJhbnROZXh0TnVtYmVyIiwiYXQiLCJmYXZvcml0ZUxpc3QiLCJpc1RoZXJlUmVzdGF1cmFudEluRmF2b3JpdGVzIl0sInNvdXJjZVJvb3QiOiIifQ==